{"ast":null,"code":"var _jsxFileName = \"/Users/louiemonteverde/Desktop/inventory-report-final-v3/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport * as XLSX from \"xlsx\";\nimport { supabase } from \"./supabase\";\nimport UploadScreen from \"./UploadScreen\";\nimport { generateMissingCountsPDF } from \"./pdfUtils\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Input = /*#__PURE__*/React.forwardRef(_c = (props, ref) => /*#__PURE__*/_jsxDEV(\"input\", {\n  ...props,\n  ref: ref,\n  className: `px-2 py-1 rounded border ${props.className || \"border-gray-300\"}`\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 8,\n  columnNumber: 3\n}, this));\n_c2 = Input;\nconst Button = props => /*#__PURE__*/_jsxDEV(\"button\", {\n  ...props,\n  className: \"bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700\"\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 16,\n  columnNumber: 3\n}, this);\n_c3 = Button;\nexport default function InventoryApp({\n  session\n}) {\n  _s();\n  const {\n    username,\n    role\n  } = session;\n  const [userRole] = useState(role);\n  const [currentUser] = useState(username);\n  const [entries, setEntries] = useState([]);\n  const [fileId, setFileId] = useState(null);\n  const [reportList, setReportList] = useState([]);\n  const [userList, setUserList] = useState([]);\n  const [selectedUsers, setSelectedUsers] = useState([]);\n  const inputRefs = useRef([]);\n  const isAdmin = userRole === \"admin\";\n  useEffect(() => {\n    loadReportList();\n    loadUserList();\n  }, []);\n  const loadReportList = async () => {\n    const {\n      data,\n      error\n    } = await supabase.from(\"files\").select(\"id, created_at\").order(\"created_at\", {\n      ascending: false\n    });\n    if (!error) setReportList(data || []);\n  };\n  const loadUserList = async () => {\n    const {\n      data,\n      error\n    } = await supabase.from(\"users\").select(\"username\");\n    if (!error) setUserList((data || []).map(u => u.username));\n  };\n  const toIntOrNull = v => {\n    if (v === null || v === undefined) return null;\n    const s = String(v).trim();\n    if (s === \"\") return null;\n    const n = parseInt(s, 10);\n    return Number.isNaN(n) ? null : n;\n  };\n  const handleUploadSubmit = async (file, activeUsers) => {\n    if (!file || activeUsers.length === 0) {\n      alert(\"Please select file and users.\");\n      return;\n    }\n    setSelectedUsers(activeUsers);\n    const reader = new FileReader();\n    reader.onload = async evt => {\n      const u8 = new Uint8Array(evt.target.result);\n      const workbook = XLSX.read(u8, {\n        type: \"array\"\n      });\n      const sheetName = workbook.SheetNames[0];\n      const worksheet = workbook.Sheets[sheetName];\n      const jsonData = XLSX.utils.sheet_to_json(worksheet, {\n        header: 1\n      });\n      const rows = jsonData.slice(1);\n      const filteredRows = rows.filter(row => {\n        const hasSku = row[0] && String(row[0]).trim() !== \"\";\n        const hasOnHand = row[1] !== undefined && row[1] !== null && String(row[1]).trim() !== \"\";\n        return hasSku && hasOnHand;\n      });\n      if (filteredRows.length === 0) {\n        alert(\"No valid rows found in file.\");\n        return;\n      }\n      const {\n        data: fileInsert,\n        error: fileErr\n      } = await supabase.from(\"files\").insert([{\n        uploaded_by: currentUser\n      }]).select().single();\n      if (fileErr || !fileInsert) {\n        alert(\"File upload error: \" + ((fileErr === null || fileErr === void 0 ? void 0 : fileErr.message) || \"unknown error\"));\n        return;\n      }\n      const newFileId = fileInsert.id;\n      setFileId(newFileId);\n      const chunkSize = Math.ceil(filteredRows.length / activeUsers.length);\n      const assignedEntries = filteredRows.map((row, index) => {\n        var _row$;\n        const userIndex = Math.floor(index / chunkSize);\n        return {\n          file_id: newFileId,\n          upload_index: index,\n          sku: String((_row$ = row[0]) !== null && _row$ !== void 0 ? _row$ : \"\"),\n          on_hand: toIntOrNull(row[1]),\n          count: toIntOrNull(row[2]),\n          description: row[3] ? String(row[3]) : \"\",\n          assigned_to: activeUsers[userIndex] || activeUsers[activeUsers.length - 1]\n        };\n      });\n      const {\n        error: insertErr\n      } = await supabase.from(\"entries\").insert(assignedEntries);\n      if (insertErr) {\n        alert(\"Upload failed: \" + insertErr.message);\n        return;\n      }\n      loadEntries(newFileId);\n\n      // ✅ Confirmation popup\n      alert(\"Upload successful!\");\n    };\n    reader.readAsArrayBuffer(file);\n  };\n  const loadEntries = async id => {\n    const allData = [];\n    const chunkSize = 1000;\n    let from = 0;\n    let to = chunkSize - 1;\n    let keepGoing = true;\n    while (keepGoing) {\n      let query = supabase.from(\"entries\").select(\"id, file_id, upload_index, sku, on_hand, description, count\", {\n        count: \"exact\"\n      }).order(\"upload_index\", {\n        ascending: true\n      }).range(from, to);\n      if (isAdmin) {\n        query = query.eq(\"file_id\", id);\n      } else {\n        query = query.eq(\"file_id\", id).eq(\"assigned_to\", currentUser);\n      }\n      const {\n        data,\n        error\n      } = await query;\n      if (error) break;\n      if (data && data.length > 0) {\n        allData.push(...data);\n      }\n      if (!data || data.length < chunkSize) {\n        keepGoing = false;\n      } else {\n        from += chunkSize;\n        to += chunkSize;\n      }\n    }\n    setEntries(allData);\n    setFileId(id);\n  };\n  const handleInputChange = async (entryId, value, index) => {\n    const newEntries = [...entries];\n    const entry = newEntries.find(e => e.id === entryId);\n    entry.count = value === \"\" ? null : parseInt(value, 10);\n    entry.entered_by = currentUser;\n    setEntries(newEntries);\n    await supabase.from(\"entries\").update({\n      count: entry.count,\n      entered_by: currentUser\n    }).eq(\"id\", entryId);\n  };\n  const getInputClass = (count, onHand) => {\n    if (count === undefined || count === null || count === \"\") return \"border-gray-300\";\n    const oh = onHand !== null && onHand !== void 0 ? onHand : 0;\n    const diff = Math.abs(count - oh);\n    if (diff === 0) return \"border-green-500\";\n    if (diff <= 10) return \"border-yellow-400\";\n    if (diff <= 20) return \"border-orange-400\";\n    return \"border-red-500\";\n  };\n  const handleGenerateMismatchReport = () => {\n    const mismatched = entries.filter(e => e.count !== undefined && e.count !== null && e.count !== e.on_hand);\n    const csvRows = [\"SKU,On Hand,Count,Difference\"];\n    mismatched.forEach(e => {\n      var _e$count, _e$on_hand, _e$on_hand2, _e$count2;\n      const diff = ((_e$count = e.count) !== null && _e$count !== void 0 ? _e$count : 0) - ((_e$on_hand = e.on_hand) !== null && _e$on_hand !== void 0 ? _e$on_hand : 0);\n      csvRows.push(`${e.sku},${(_e$on_hand2 = e.on_hand) !== null && _e$on_hand2 !== void 0 ? _e$on_hand2 : \"\"},${(_e$count2 = e.count) !== null && _e$count2 !== void 0 ? _e$count2 : \"\"},${diff}`);\n    });\n    const blob = new Blob([csvRows.join(\"\\n\")], {\n      type: \"text/csv\"\n    });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement(\"a\");\n    a.href = url;\n    a.download = `Mismatch_Report_${Date.now()}.csv`;\n    a.click();\n    URL.revokeObjectURL(url);\n  };\n  const handleDownloadMissingCounts = () => {\n    const missing = entries.filter(e => e.count === null || e.count === undefined);\n    generateMissingCountsPDF(missing);\n  };\n  const focusNextEditableInput = startIndex => {\n    for (let i = startIndex + 1; i < entries.length; i++) {\n      const next = inputRefs.current[i];\n      if (next) {\n        next.focus();\n        break;\n      }\n    }\n  };\n  const handleLogout = async () => {\n    await supabase.auth.signOut();\n    window.location.reload(); // ✅ force return to login screen\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-6 w-full space-y-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-between\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-gray-700 text-sm\",\n        children: [\"Logged in as: \", currentUser, \" (\", userRole, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleLogout,\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 7\n    }, this), isAdmin && /*#__PURE__*/_jsxDEV(UploadScreen, {\n      users: userList.map(u => ({\n        id: u,\n        name: u\n      })),\n      onSubmit: handleUploadSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-md mx-auto w-full\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"block mb-1 font-semibold text-gray-800\",\n        children: \"Select Report:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"border rounded p-2 w-full\",\n        onChange: e => loadEntries(e.target.value),\n        defaultValue: \"\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          disabled: true,\n          children: \"-- Select a Report --\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 11\n        }, this), reportList.map(r => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: r.id,\n          children: new Date(r.created_at).toLocaleString()\n        }, r.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 7\n    }, this), entries.length > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"overflow-x-auto w-full max-w-full\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"w-full table-auto border border-gray-300 text-sm text-center whitespace-nowrap\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            className: \"bg-gray-100\",\n            children: isAdmin ? /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"border px-4 py-2 text-center\",\n                children: \"SKU\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 254,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"border px-4 py-2 text-center\",\n                children: \"On Hand\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 255,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"border px-4 py-2\",\n                children: \"Count\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 256,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"border px-4 py-2 text-left\",\n                children: \"Description\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 257,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"border px-4 py-2 text-center\",\n                children: \"SKU\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 261,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"border px-4 py-2\",\n                children: \"Count\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 262,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: entries.map((entry, index) => {\n              var _entry$on_hand, _entry$count, _entry$description, _entry$count2;\n              return isAdmin ? /*#__PURE__*/_jsxDEV(\"tr\", {\n                className: \"hover:bg-gray-50\",\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"border px-4 py-2 font-semibold text-center\",\n                  children: entry.sku\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 270,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"border px-4 py-2 text-center\",\n                  children: (_entry$on_hand = entry.on_hand) !== null && _entry$on_hand !== void 0 ? _entry$on_hand : 0\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 271,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"border px-4 py-2\",\n                  children: /*#__PURE__*/_jsxDEV(Input, {\n                    ref: el => inputRefs.current[index] = el,\n                    type: \"number\",\n                    value: (_entry$count = entry.count) !== null && _entry$count !== void 0 ? _entry$count : \"\",\n                    onChange: e => handleInputChange(entry.id, e.target.value, index),\n                    onKeyDown: e => {\n                      if (e.key === \"Enter\") {\n                        e.preventDefault();\n                        focusNextEditableInput(index);\n                      }\n                    },\n                    className: `${getInputClass(entry.count, entry.on_hand)} w-full text-center`\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 273,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 272,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"border px-4 py-2 text-left\",\n                  children: (_entry$description = entry.description) !== null && _entry$description !== void 0 ? _entry$description : \"\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 287,\n                  columnNumber: 23\n                }, this)]\n              }, entry.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 269,\n                columnNumber: 21\n              }, this) : /*#__PURE__*/_jsxDEV(\"tr\", {\n                className: \"hover:bg-gray-50\",\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"border px-4 py-2 font-semibold text-center\",\n                  children: entry.sku\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 291,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"border px-4 py-2\",\n                  children: /*#__PURE__*/_jsxDEV(Input, {\n                    ref: el => inputRefs.current[index] = el,\n                    type: \"number\",\n                    value: (_entry$count2 = entry.count) !== null && _entry$count2 !== void 0 ? _entry$count2 : \"\",\n                    onChange: e => handleInputChange(entry.id, e.target.value, index),\n                    onKeyDown: e => {\n                      if (e.key === \"Enter\") {\n                        e.preventDefault();\n                        focusNextEditableInput(index);\n                      }\n                    },\n                    className: `${getInputClass(entry.count, entry.on_hand)} w-full text-center`\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 293,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 292,\n                  columnNumber: 23\n                }, this)]\n              }, entry.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 290,\n                columnNumber: 21\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex gap-2 mt-4\",\n        children: [!isAdmin && /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleDownloadMissingCounts,\n          children: \"Counts Needed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 26\n        }, this), isAdmin && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleDownloadMissingCounts,\n            children: \"Counts Needed\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleGenerateMismatchReport,\n            children: \"Mismatch Report\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-gray-500\",\n      children: \"No report selected or no entries available yet.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 227,\n    columnNumber: 5\n  }, this);\n}\n_s(InventoryApp, \"0GBZkDTV3vXXH3uexksJqAkiRZg=\");\n_c4 = InventoryApp;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"Input$React.forwardRef\");\n$RefreshReg$(_c2, \"Input\");\n$RefreshReg$(_c3, \"Button\");\n$RefreshReg$(_c4, \"InventoryApp\");","map":{"version":3,"names":["React","useState","useEffect","useRef","XLSX","supabase","UploadScreen","generateMissingCountsPDF","jsxDEV","_jsxDEV","Fragment","_Fragment","Input","forwardRef","_c","props","ref","className","fileName","_jsxFileName","lineNumber","columnNumber","_c2","Button","_c3","InventoryApp","session","_s","username","role","userRole","currentUser","entries","setEntries","fileId","setFileId","reportList","setReportList","userList","setUserList","selectedUsers","setSelectedUsers","inputRefs","isAdmin","loadReportList","loadUserList","data","error","from","select","order","ascending","map","u","toIntOrNull","v","undefined","s","String","trim","n","parseInt","Number","isNaN","handleUploadSubmit","file","activeUsers","length","alert","reader","FileReader","onload","evt","u8","Uint8Array","target","result","workbook","read","type","sheetName","SheetNames","worksheet","Sheets","jsonData","utils","sheet_to_json","header","rows","slice","filteredRows","filter","row","hasSku","hasOnHand","fileInsert","fileErr","insert","uploaded_by","single","message","newFileId","id","chunkSize","Math","ceil","assignedEntries","index","_row$","userIndex","floor","file_id","upload_index","sku","on_hand","count","description","assigned_to","insertErr","loadEntries","readAsArrayBuffer","allData","to","keepGoing","query","range","eq","push","handleInputChange","entryId","value","newEntries","entry","find","e","entered_by","update","getInputClass","onHand","oh","diff","abs","handleGenerateMismatchReport","mismatched","csvRows","forEach","_e$count","_e$on_hand","_e$on_hand2","_e$count2","blob","Blob","join","url","URL","createObjectURL","a","document","createElement","href","download","Date","now","click","revokeObjectURL","handleDownloadMissingCounts","missing","focusNextEditableInput","startIndex","i","next","current","focus","handleLogout","auth","signOut","window","location","reload","children","onClick","users","name","onSubmit","onChange","defaultValue","disabled","r","created_at","toLocaleString","_entry$on_hand","_entry$count","_entry$description","_entry$count2","el","onKeyDown","key","preventDefault","_c4","$RefreshReg$"],"sources":["/Users/louiemonteverde/Desktop/inventory-report-final-v3/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport * as XLSX from \"xlsx\";\nimport { supabase } from \"./supabase\";\nimport UploadScreen from \"./UploadScreen\";\nimport { generateMissingCountsPDF } from \"./pdfUtils\";\n\nconst Input = React.forwardRef((props, ref) => (\n  <input\n    {...props}\n    ref={ref}\n    className={`px-2 py-1 rounded border ${props.className || \"border-gray-300\"}`}\n  />\n));\n\nconst Button = (props) => (\n  <button\n    {...props}\n    className=\"bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700\"\n  />\n);\n\nexport default function InventoryApp({ session }) {\n  const { username, role } = session;\n  const [userRole] = useState(role);\n  const [currentUser] = useState(username);\n  const [entries, setEntries] = useState([]);\n  const [fileId, setFileId] = useState(null);\n  const [reportList, setReportList] = useState([]);\n  const [userList, setUserList] = useState([]);\n  const [selectedUsers, setSelectedUsers] = useState([]);\n  const inputRefs = useRef([]);\n\n  const isAdmin = userRole === \"admin\";\n\n  useEffect(() => {\n    loadReportList();\n    loadUserList();\n  }, []);\n\n  const loadReportList = async () => {\n    const { data, error } = await supabase\n      .from(\"files\")\n      .select(\"id, created_at\")\n      .order(\"created_at\", { ascending: false });\n    if (!error) setReportList(data || []);\n  };\n\n  const loadUserList = async () => {\n    const { data, error } = await supabase.from(\"users\").select(\"username\");\n    if (!error) setUserList((data || []).map((u) => u.username));\n  };\n\n  const toIntOrNull = (v) => {\n    if (v === null || v === undefined) return null;\n    const s = String(v).trim();\n    if (s === \"\") return null;\n    const n = parseInt(s, 10);\n    return Number.isNaN(n) ? null : n;\n  };\n\n  const handleUploadSubmit = async (file, activeUsers) => {\n    if (!file || activeUsers.length === 0) {\n      alert(\"Please select file and users.\");\n      return;\n    }\n    setSelectedUsers(activeUsers);\n\n    const reader = new FileReader();\n    reader.onload = async (evt) => {\n      const u8 = new Uint8Array(evt.target.result);\n      const workbook = XLSX.read(u8, { type: \"array\" });\n      const sheetName = workbook.SheetNames[0];\n      const worksheet = workbook.Sheets[sheetName];\n      const jsonData = XLSX.utils.sheet_to_json(worksheet, { header: 1 });\n\n      const rows = jsonData.slice(1);\n      const filteredRows = rows.filter((row) => {\n        const hasSku = row[0] && String(row[0]).trim() !== \"\";\n        const hasOnHand = row[1] !== undefined && row[1] !== null && String(row[1]).trim() !== \"\";\n        return hasSku && hasOnHand;\n      });\n\n      if (filteredRows.length === 0) {\n        alert(\"No valid rows found in file.\");\n        return;\n      }\n\n      const { data: fileInsert, error: fileErr } = await supabase\n        .from(\"files\")\n        .insert([{ uploaded_by: currentUser }])\n        .select()\n        .single();\n\n      if (fileErr || !fileInsert) {\n        alert(\"File upload error: \" + (fileErr?.message || \"unknown error\"));\n        return;\n      }\n\n      const newFileId = fileInsert.id;\n      setFileId(newFileId);\n\n      const chunkSize = Math.ceil(filteredRows.length / activeUsers.length);\n      const assignedEntries = filteredRows.map((row, index) => {\n        const userIndex = Math.floor(index / chunkSize);\n        return {\n          file_id: newFileId,\n          upload_index: index,\n          sku: String(row[0] ?? \"\"),\n          on_hand: toIntOrNull(row[1]),\n          count: toIntOrNull(row[2]),\n          description: row[3] ? String(row[3]) : \"\",\n          assigned_to: activeUsers[userIndex] || activeUsers[activeUsers.length - 1],\n        };\n      });\n\n      const { error: insertErr } = await supabase.from(\"entries\").insert(assignedEntries);\n      if (insertErr) {\n        alert(\"Upload failed: \" + insertErr.message);\n        return;\n      }\n\n      loadEntries(newFileId);\n\n      // ✅ Confirmation popup\n      alert(\"Upload successful!\");\n    };\n\n    reader.readAsArrayBuffer(file);\n  };\n\n  const loadEntries = async (id) => {\n    const allData = [];\n    const chunkSize = 1000;\n    let from = 0;\n    let to = chunkSize - 1;\n    let keepGoing = true;\n\n    while (keepGoing) {\n      let query = supabase\n        .from(\"entries\")\n        .select(\"id, file_id, upload_index, sku, on_hand, description, count\", { count: \"exact\" })\n        .order(\"upload_index\", { ascending: true })\n        .range(from, to);\n\n      if (isAdmin) {\n        query = query.eq(\"file_id\", id);\n      } else {\n        query = query.eq(\"file_id\", id).eq(\"assigned_to\", currentUser);\n      }\n\n      const { data, error } = await query;\n      if (error) break;\n\n      if (data && data.length > 0) {\n        allData.push(...data);\n      }\n\n      if (!data || data.length < chunkSize) {\n        keepGoing = false;\n      } else {\n        from += chunkSize;\n        to += chunkSize;\n      }\n    }\n\n    setEntries(allData);\n    setFileId(id);\n  };\n\n  const handleInputChange = async (entryId, value, index) => {\n    const newEntries = [...entries];\n    const entry = newEntries.find((e) => e.id === entryId);\n    entry.count = value === \"\" ? null : parseInt(value, 10);\n    entry.entered_by = currentUser;\n    setEntries(newEntries);\n\n    await supabase.from(\"entries\").update({ count: entry.count, entered_by: currentUser }).eq(\"id\", entryId);\n  };\n\n  const getInputClass = (count, onHand) => {\n    if (count === undefined || count === null || count === \"\") return \"border-gray-300\";\n    const oh = onHand ?? 0;\n    const diff = Math.abs(count - oh);\n    if (diff === 0) return \"border-green-500\";\n    if (diff <= 10) return \"border-yellow-400\";\n    if (diff <= 20) return \"border-orange-400\";\n    return \"border-red-500\";\n  };\n\n  const handleGenerateMismatchReport = () => {\n    const mismatched = entries.filter((e) => e.count !== undefined && e.count !== null && e.count !== e.on_hand);\n    const csvRows = [\"SKU,On Hand,Count,Difference\"];\n    mismatched.forEach((e) => {\n      const diff = (e.count ?? 0) - (e.on_hand ?? 0);\n      csvRows.push(`${e.sku},${e.on_hand ?? \"\"},${e.count ?? \"\"},${diff}`);\n    });\n    const blob = new Blob([csvRows.join(\"\\n\")], { type: \"text/csv\" });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement(\"a\");\n    a.href = url;\n    a.download = `Mismatch_Report_${Date.now()}.csv`;\n    a.click();\n    URL.revokeObjectURL(url);\n  };\n\n  const handleDownloadMissingCounts = () => {\n    const missing = entries.filter((e) => e.count === null || e.count === undefined);\n    generateMissingCountsPDF(missing);\n  };\n\n  const focusNextEditableInput = (startIndex) => {\n    for (let i = startIndex + 1; i < entries.length; i++) {\n      const next = inputRefs.current[i];\n      if (next) {\n        next.focus();\n        break;\n      }\n    }\n  };\n\n  const handleLogout = async () => {\n    await supabase.auth.signOut();\n    window.location.reload(); // ✅ force return to login screen\n  };\n\n  return (\n    <div className=\"p-6 w-full space-y-4\">\n      <div className=\"flex justify-between\">\n        <div className=\"text-gray-700 text-sm\">Logged in as: {currentUser} ({userRole})</div>\n        <Button onClick={handleLogout}>Logout</Button>\n      </div>\n\n      {isAdmin && <UploadScreen users={userList.map((u) => ({ id: u, name: u }))} onSubmit={handleUploadSubmit} />}\n\n      <div className=\"max-w-md mx-auto w-full\">\n        <label className=\"block mb-1 font-semibold text-gray-800\">Select Report:</label>\n        <select className=\"border rounded p-2 w-full\" onChange={(e) => loadEntries(e.target.value)} defaultValue=\"\">\n          <option value=\"\" disabled>-- Select a Report --</option>\n          {reportList.map((r) => (\n            <option key={r.id} value={r.id}>\n              {new Date(r.created_at).toLocaleString()}\n            </option>\n          ))}\n        </select>\n      </div>\n\n      {entries.length > 0 ? (\n        <>\n          <div className=\"overflow-x-auto w-full max-w-full\">\n            <table className=\"w-full table-auto border border-gray-300 text-sm text-center whitespace-nowrap\">\n              <thead className=\"bg-gray-100\">\n                {isAdmin ? (\n                  <tr>\n                    <th className=\"border px-4 py-2 text-center\">SKU</th>\n                    <th className=\"border px-4 py-2 text-center\">On Hand</th>\n                    <th className=\"border px-4 py-2\">Count</th>\n                    <th className=\"border px-4 py-2 text-left\">Description</th>\n                  </tr>\n                ) : (\n                  <tr>\n                    <th className=\"border px-4 py-2 text-center\">SKU</th>\n                    <th className=\"border px-4 py-2\">Count</th>\n                  </tr>\n                )}\n              </thead>\n              <tbody>\n                {entries.map((entry, index) =>\n                  isAdmin ? (\n                    <tr key={entry.id} className=\"hover:bg-gray-50\">\n                      <td className=\"border px-4 py-2 font-semibold text-center\">{entry.sku}</td>\n                      <td className=\"border px-4 py-2 text-center\">{entry.on_hand ?? 0}</td>\n                      <td className=\"border px-4 py-2\">\n                        <Input\n                          ref={(el) => (inputRefs.current[index] = el)}\n                          type=\"number\"\n                          value={entry.count ?? \"\"}\n                          onChange={(e) => handleInputChange(entry.id, e.target.value, index)}\n                          onKeyDown={(e) => {\n                            if (e.key === \"Enter\") {\n                              e.preventDefault();\n                              focusNextEditableInput(index);\n                            }\n                          }}\n                          className={`${getInputClass(entry.count, entry.on_hand)} w-full text-center`}\n                        />\n                      </td>\n                      <td className=\"border px-4 py-2 text-left\">{entry.description ?? \"\"}</td>\n                    </tr>\n                  ) : (\n                    <tr key={entry.id} className=\"hover:bg-gray-50\">\n                      <td className=\"border px-4 py-2 font-semibold text-center\">{entry.sku}</td>\n                      <td className=\"border px-4 py-2\">\n                        <Input\n                          ref={(el) => (inputRefs.current[index] = el)}\n                          type=\"number\"\n                          value={entry.count ?? \"\"}\n                          onChange={(e) => handleInputChange(entry.id, e.target.value, index)}\n                          onKeyDown={(e) => {\n                            if (e.key === \"Enter\") {\n                              e.preventDefault();\n                              focusNextEditableInput(index);\n                            }\n                          }}\n                          className={`${getInputClass(entry.count, entry.on_hand)} w-full text-center`}\n                        />\n                      </td>\n                    </tr>\n                  )\n                )}\n              </tbody>\n            </table>\n          </div>\n\n          <div className=\"flex gap-2 mt-4\">\n            {!isAdmin && <Button onClick={handleDownloadMissingCounts}>Counts Needed</Button>}\n            {isAdmin && (\n              <>\n                <Button onClick={handleDownloadMissingCounts}>Counts Needed</Button>\n                <Button onClick={handleGenerateMismatchReport}>Mismatch Report</Button>\n              </>\n            )}\n          </div>\n        </>\n      ) : (\n        <p className=\"text-gray-500\">No report selected or no entries available yet.</p>\n      )}\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}