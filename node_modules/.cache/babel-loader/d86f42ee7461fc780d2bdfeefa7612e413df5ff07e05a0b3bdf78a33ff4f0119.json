{"ast":null,"code":"import jsPDF from \"jspdf\";\nimport \"jspdf-autotable\";\n\n/**\n * Generate a \"Counts Needed\" PDF\n * @param {Array<{sku: string}>} missingRows - entries missing counts\n * @param {string} username - current user\n * @param {string} reportName - report identifier (ex: upload date/time)\n */\nexport const generateMissingCountsPDF = (missingRows, username = \"\", reportName = \"\") => {\n  const doc = new jsPDF({\n    orientation: \"portrait\",\n    unit: \"pt\",\n    format: \"letter\"\n  });\n  const pageWidth = doc.internal.pageSize.getWidth();\n  const pageHeight = doc.internal.pageSize.getHeight();\n\n  // Header function\n  const addHeader = () => {\n    doc.setFont(\"helvetica\", \"bold\");\n    doc.setFontSize(14);\n    doc.text(\"Counts Needed Report\", pageWidth / 2, 40, {\n      align: \"center\"\n    });\n    doc.setFont(\"helvetica\", \"normal\");\n    doc.setFontSize(10);\n    doc.text(`User: ${username}`, 40, 55);\n    doc.text(`Report: ${reportName}`, pageWidth - 40, 55, {\n      align: \"right\"\n    });\n  };\n\n  // Footer function\n  const addFooter = () => {\n    const pageCount = doc.internal.getNumberOfPages();\n    for (let i = 1; i <= pageCount; i++) {\n      doc.setPage(i);\n      doc.setFontSize(10);\n      doc.text(`Page ${i} of ${pageCount}`, pageWidth / 2, pageHeight - 20, {\n        align: \"center\"\n      });\n    }\n  };\n\n  // Build rows: [SKU, Count, SKU, Count]\n  const rows = [];\n  for (let i = 0; i < missingRows.length; i += 2) {\n    var _missingRows$i, _missingRows;\n    const leftSKU = ((_missingRows$i = missingRows[i]) === null || _missingRows$i === void 0 ? void 0 : _missingRows$i.sku) || \"\";\n    const rightSKU = ((_missingRows = missingRows[i + 1]) === null || _missingRows === void 0 ? void 0 : _missingRows.sku) || \"\";\n    rows.push([leftSKU, \"__________\", rightSKU, \"__________\"]);\n  }\n\n  // Add header before table\n  addHeader();\n\n  // Table\n  doc.autoTable({\n    startY: 70,\n    head: [[\"SKU\", \"Count\", \"SKU\", \"Count\"]],\n    body: rows,\n    styles: {\n      fontSize: 10,\n      cellPadding: 4,\n      valign: \"middle\",\n      halign: \"center\"\n    },\n    headStyles: {\n      fillColor: [41, 128, 185],\n      textColor: 255,\n      fontSize: 11,\n      halign: \"center\"\n    },\n    columnStyles: {\n      0: {\n        cellWidth: 200\n      },\n      1: {\n        cellWidth: 80\n      },\n      2: {\n        cellWidth: 200\n      },\n      3: {\n        cellWidth: 80\n      }\n    },\n    margin: {\n      left: 40,\n      right: 40\n    },\n    tableWidth: \"auto\",\n    tableLineColor: [220, 220, 220],\n    tableLineWidth: 0.5,\n    didDrawPage: () => {\n      addHeader(); // repeat header on each page\n    }\n  });\n\n  // Add footer after table (on all pages)\n  addFooter();\n  doc.save(\"counts-needed.pdf\");\n};","map":{"version":3,"names":["jsPDF","generateMissingCountsPDF","missingRows","username","reportName","doc","orientation","unit","format","pageWidth","internal","pageSize","getWidth","pageHeight","getHeight","addHeader","setFont","setFontSize","text","align","addFooter","pageCount","getNumberOfPages","i","setPage","rows","length","_missingRows$i","_missingRows","leftSKU","sku","rightSKU","push","autoTable","startY","head","body","styles","fontSize","cellPadding","valign","halign","headStyles","fillColor","textColor","columnStyles","cellWidth","margin","left","right","tableWidth","tableLineColor","tableLineWidth","didDrawPage","save"],"sources":["/Users/louiemonteverde/Desktop/inventory-report-final-v2/src/pdfUtils.js"],"sourcesContent":["import jsPDF from \"jspdf\";\nimport \"jspdf-autotable\";\n\n/**\n * Generate a \"Counts Needed\" PDF\n * @param {Array<{sku: string}>} missingRows - entries missing counts\n * @param {string} username - current user\n * @param {string} reportName - report identifier (ex: upload date/time)\n */\nexport const generateMissingCountsPDF = (missingRows, username = \"\", reportName = \"\") => {\n  const doc = new jsPDF({ orientation: \"portrait\", unit: \"pt\", format: \"letter\" });\n\n  const pageWidth = doc.internal.pageSize.getWidth();\n  const pageHeight = doc.internal.pageSize.getHeight();\n\n  // Header function\n  const addHeader = () => {\n    doc.setFont(\"helvetica\", \"bold\");\n    doc.setFontSize(14);\n    doc.text(\"Counts Needed Report\", pageWidth / 2, 40, { align: \"center\" });\n\n    doc.setFont(\"helvetica\", \"normal\");\n    doc.setFontSize(10);\n    doc.text(`User: ${username}`, 40, 55);\n    doc.text(`Report: ${reportName}`, pageWidth - 40, 55, { align: \"right\" });\n  };\n\n  // Footer function\n  const addFooter = () => {\n    const pageCount = doc.internal.getNumberOfPages();\n    for (let i = 1; i <= pageCount; i++) {\n      doc.setPage(i);\n      doc.setFontSize(10);\n      doc.text(`Page ${i} of ${pageCount}`, pageWidth / 2, pageHeight - 20, { align: \"center\" });\n    }\n  };\n\n  // Build rows: [SKU, Count, SKU, Count]\n  const rows = [];\n  for (let i = 0; i < missingRows.length; i += 2) {\n    const leftSKU = missingRows[i]?.sku || \"\";\n    const rightSKU = missingRows[i + 1]?.sku || \"\";\n    rows.push([leftSKU, \"__________\", rightSKU, \"__________\"]);\n  }\n\n  // Add header before table\n  addHeader();\n\n  // Table\n  doc.autoTable({\n    startY: 70,\n    head: [[\"SKU\", \"Count\", \"SKU\", \"Count\"]],\n    body: rows,\n    styles: {\n      fontSize: 10,\n      cellPadding: 4,\n      valign: \"middle\",\n      halign: \"center\",\n    },\n    headStyles: {\n      fillColor: [41, 128, 185],\n      textColor: 255,\n      fontSize: 11,\n      halign: \"center\",\n    },\n    columnStyles: {\n      0: { cellWidth: 200 },\n      1: { cellWidth: 80 },\n      2: { cellWidth: 200 },\n      3: { cellWidth: 80 },\n    },\n    margin: { left: 40, right: 40 },\n    tableWidth: \"auto\",\n    tableLineColor: [220, 220, 220],\n    tableLineWidth: 0.5,\n    didDrawPage: () => {\n      addHeader(); // repeat header on each page\n    },\n  });\n\n  // Add footer after table (on all pages)\n  addFooter();\n\n  doc.save(\"counts-needed.pdf\");\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}