{"ast":null,"code":"var _jsxFileName = \"/Users/louiemonteverde/Desktop/inventory-report-final-v3/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport * as XLSX from \"xlsx\";\nimport { supabase } from \"./supabase\";\nimport UploadScreen from \"./UploadScreen\";\nimport { generateMissingCountsPDF } from \"./pdfUtils\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Input = /*#__PURE__*/React.forwardRef(_c = (props, ref) => /*#__PURE__*/_jsxDEV(\"input\", {\n  ...props,\n  ref: ref,\n  className: `px-2 py-1 rounded border ${props.className || \"border-gray-300\"}`\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 8,\n  columnNumber: 3\n}, this));\n_c2 = Input;\nconst Button = props => /*#__PURE__*/_jsxDEV(\"button\", {\n  ...props,\n  className: \"bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700\"\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 16,\n  columnNumber: 3\n}, this);\n_c3 = Button;\nexport default function InventoryApp({\n  session\n}) {\n  _s();\n  const {\n    username,\n    role\n  } = session;\n  const [userRole] = useState(role);\n  const [currentUser] = useState(username);\n  const [entries, setEntries] = useState([]);\n  const [fileId, setFileId] = useState(null);\n  const [reportList, setReportList] = useState([]);\n  const [userList, setUserList] = useState([]);\n  const [selectedUsers, setSelectedUsers] = useState([]);\n  const inputRefs = useRef([]);\n\n  // Debug role info\n  console.log(\"Session role raw:\", role);\n  console.log(\"App.js state userRole:\", userRole);\n\n  // Helper: check if admin\n  const isAdmin = userRole && userRole.toString().toLowerCase().includes(\"admin\");\n  useEffect(() => {\n    loadReportList();\n    loadUserList();\n  }, []);\n  const loadReportList = async () => {\n    const {\n      data,\n      error\n    } = await supabase.from(\"files\").select(\"id, created_at\").order(\"created_at\", {\n      ascending: false\n    });\n    if (!error) {\n      setReportList(data);\n    }\n  };\n  const loadUserList = async () => {\n    const {\n      data,\n      error\n    } = await supabase.from(\"users\").select(\"username\");\n    if (!error) {\n      setUserList(data.map(u => u.username));\n    }\n  };\n\n  // Upload flow with cleanup + user assignment\n  const handleUploadSubmit = async (file, activeUsers) => {\n    if (!file) {\n      alert(\"Please select a file.\");\n      return;\n    }\n    if (activeUsers.length === 0) {\n      alert(\"Please select at least one user.\");\n      return;\n    }\n    setSelectedUsers(activeUsers);\n    const reader = new FileReader();\n    reader.onload = async evt => {\n      const data = new Uint8Array(evt.target.result);\n\n      // Universal loader (CSV, XLS, XLSX, XML)\n      const workbook = XLSX.read(data, {\n        type: \"array\"\n      });\n      const sheetName = workbook.SheetNames[0];\n      const worksheet = workbook.Sheets[sheetName];\n      let jsonData = XLSX.utils.sheet_to_json(worksheet, {\n        header: 1\n      });\n\n      // --- CLEANING ---\n      jsonData = jsonData.slice(5); // delete rows 1â€“5\n      if (jsonData.length > 0) {\n        jsonData[0][4] = \"USER\"; // set E1 header\n      }\n      jsonData = jsonData.filter((row, idx) => {\n        if (idx === 0) return true; // keep header\n        return row[1] !== undefined && row[1] !== null && row[1] !== \"\";\n      });\n      const rows = jsonData.slice(1);\n      if (rows.length === 0) {\n        alert(\"No valid rows found in file.\");\n        return;\n      }\n\n      // Register file\n      const {\n        data: fileInsert,\n        error: fileErr\n      } = await supabase.from(\"files\").insert([{\n        uploaded_by: currentUser\n      }]).select().single();\n      if (fileErr || !fileInsert) {\n        alert(\"File upload error: \" + fileErr.message);\n        return;\n      }\n      const file_id = fileInsert.id;\n      setFileId(file_id);\n\n      // Even split across selected users\n      const chunkSize = Math.ceil(rows.length / activeUsers.length);\n      const assignedEntries = rows.map((row, index) => {\n        const userIndex = Math.floor(index / chunkSize);\n        return {\n          file_id,\n          upload_index: index,\n          sku: row[0],\n          // Column A\n          on_hand: parseInt(row[1]),\n          // Column B\n          description: row[3] || \"\",\n          // Column D\n          assigned_to: activeUsers[userIndex] || activeUsers[activeUsers.length - 1]\n        };\n      });\n      const {\n        error: insertErr\n      } = await supabase.from(\"entries\").insert(assignedEntries);\n      if (insertErr) {\n        alert(\"Upload failed: \" + insertErr.message);\n        return;\n      }\n      loadEntries(file_id);\n    };\n    reader.readAsArrayBuffer(file);\n  };\n  const loadEntries = async id => {\n    const allData = [];\n    const chunkSize = 1000;\n    let from = 0;\n    let to = chunkSize - 1;\n    let keepGoing = true;\n    while (keepGoing) {\n      let query = supabase.from(\"entries\").select(\"id, file_id, upload_index, sku, on_hand, description, count, assigned_to\", {\n        count: \"exact\"\n      }).order(\"upload_index\", {\n        ascending: true\n      }).range(from, to);\n      if (isAdmin) {\n        query = query.eq(\"file_id\", id);\n      } else {\n        query = query.eq(\"file_id\", id).eq(\"assigned_to\", currentUser);\n      }\n      const {\n        data,\n        error\n      } = await query;\n      if (data) {\n        console.log(\"Loaded entries:\", data.map(e => ({\n          sku: e.sku,\n          assigned_to: e.assigned_to\n        })));\n      }\n      if (error) {\n        console.error(\"Error loading entries:\", error);\n        break;\n      }\n      if (data.length > 0) {\n        allData.push(...data);\n      }\n      if (data.length < chunkSize) {\n        keepGoing = false;\n      } else {\n        from += chunkSize;\n        to += chunkSize;\n      }\n    }\n    setEntries(allData);\n    setFileId(id);\n  };\n  const handleInputChange = async (entryId, value, index) => {\n    const newEntries = [...entries];\n    const entry = newEntries.find(e => e.id === entryId);\n    entry.count = value === \"\" ? null : parseInt(value);\n    entry.entered_by = currentUser;\n    setEntries(newEntries);\n    await supabase.from(\"entries\").update({\n      count: entry.count,\n      entered_by: currentUser\n    }).eq(\"id\", entryId).then(({\n      error\n    }) => {\n      if (error) {\n        console.error(\"Error saving count:\", error);\n        alert(\"Failed to save count.\");\n      }\n    });\n  };\n  const getInputClass = (count, onHand) => {\n    if (count === undefined || count === null || count === \"\") return \"border-gray-300\";\n    const diff = Math.abs(count - onHand);\n    if (diff === 0) return \"border-green-500\";\n    if (diff <= 10) return \"border-yellow-400\";\n    if (diff <= 20) return \"border-orange-400\";\n    return \"border-red-500\";\n  };\n  const handleGenerateMismatchReport = () => {\n    const mismatched = entries.filter(e => e.count !== undefined && e.count !== null && e.count !== e.on_hand);\n    const csvRows = [\"SKU,On Hand,Count,Difference,User\"];\n    mismatched.forEach(e => {\n      const diff = e.count - e.on_hand;\n      csvRows.push(`${e.sku},${e.on_hand},${e.count},${diff},${e.assigned_to}`);\n    });\n    const blob = new Blob([csvRows.join(\"\\n\")], {\n      type: \"text/csv\"\n    });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement(\"a\");\n    a.href = url;\n    a.download = `Mismatch_Report_${Date.now()}.csv`;\n    a.click();\n    URL.revokeObjectURL(url);\n  };\n  const handleDownloadMissingCounts = () => {\n    const missing = entries.filter(e => e.count === null || e.count === undefined);\n    generateMissingCountsPDF(missing);\n  };\n  const focusNextEditableInput = startIndex => {\n    for (let i = startIndex + 1; i < entries.length; i++) {\n      var _entries$i;\n      if (((_entries$i = entries[i]) === null || _entries$i === void 0 ? void 0 : _entries$i.assigned_to) === currentUser) {\n        const next = inputRefs.current[i];\n        if (next) {\n          next.focus();\n          break;\n        }\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-6 w-full space-y-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-between\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-gray-700 text-sm\",\n        children: [\"Logged in as: \", currentUser, \" (\", userRole, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => supabase.auth.signOut(),\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 7\n    }, this), isAdmin && /*#__PURE__*/_jsxDEV(UploadScreen, {\n      users: userList.map(u => ({\n        id: u,\n        name: u\n      })),\n      onSubmit: handleUploadSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-md mx-auto w-full\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"block mb-1 font-semibold text-gray-800\",\n        children: \"Select Report:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"border rounded p-2 w-full\",\n        onChange: e => loadEntries(e.target.value),\n        defaultValue: \"\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          disabled: true,\n          children: \"-- Select a Report --\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 11\n        }, this), reportList.map(r => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: r.id,\n          children: new Date(r.created_at).toLocaleString()\n        }, r.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 7\n    }, this), entries.length > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"overflow-x-auto w-full max-w-full\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"w-full table-auto border border-gray-300 text-sm text-center whitespace-nowrap\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            className: \"bg-gray-100\",\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"border px-4 py-2\",\n                children: \"SKU\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 302,\n                columnNumber: 19\n              }, this), isAdmin && /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"border px-4 py-2\",\n                children: \"On Hand\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 303,\n                columnNumber: 31\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"border px-4 py-2\",\n                children: \"Count\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 304,\n                columnNumber: 19\n              }, this), isAdmin && /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"border px-4 py-2\",\n                children: \"Description\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 305,\n                columnNumber: 31\n              }, this), isAdmin && /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"border px-4 py-2\",\n                children: \"User\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 306,\n                columnNumber: 31\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 301,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: entries.map((entry, index) => {\n              var _entry$count, _entry$count2;\n              return /*#__PURE__*/_jsxDEV(\"tr\", {\n                className: \"hover:bg-gray-50\",\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"border px-4 py-2 font-semibold text-center\",\n                  children: entry.sku\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 312,\n                  columnNumber: 21\n                }, this), isAdmin && /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"border px-4 py-2 text-right\",\n                  children: entry.on_hand\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 315,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"border px-4 py-2\",\n                  children: entry.assigned_to === currentUser || isAdmin ? /*#__PURE__*/_jsxDEV(Input, {\n                    ref: el => inputRefs.current[index] = el,\n                    type: \"number\",\n                    value: (_entry$count = entry.count) !== null && _entry$count !== void 0 ? _entry$count : \"\",\n                    onChange: e => handleInputChange(entry.id, e.target.value, index),\n                    onKeyDown: e => {\n                      if (e.key === \"Enter\") {\n                        e.preventDefault();\n                        focusNextEditableInput(index);\n                      }\n                    },\n                    className: `${getInputClass(entry.count, entry.on_hand)} w-full text-center`\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 320,\n                    columnNumber: 25\n                  }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"block text-gray-600\",\n                    children: (_entry$count2 = entry.count) !== null && _entry$count2 !== void 0 ? _entry$count2 : \"NA\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 334,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 318,\n                  columnNumber: 21\n                }, this), isAdmin && /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"border px-4 py-2 text-left\",\n                  children: entry.description\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 339,\n                  columnNumber: 23\n                }, this), isAdmin && /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"border px-4 py-2 text-center\",\n                  children: entry.assigned_to || \"\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 343,\n                  columnNumber: 23\n                }, this)]\n              }, entry.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 311,\n                columnNumber: 19\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex gap-2 mt-4\",\n        children: [!isAdmin && /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleDownloadMissingCounts,\n          children: \"Counts Needed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 15\n        }, this), isAdmin && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleDownloadMissingCounts,\n            children: \"Counts Needed\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 357,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleGenerateMismatchReport,\n            children: \"Mismatch Report\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 358,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-gray-500\",\n      children: \"No report selected or no entries available yet.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 364,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 261,\n    columnNumber: 5\n  }, this);\n}\n_s(InventoryApp, \"0GBZkDTV3vXXH3uexksJqAkiRZg=\");\n_c4 = InventoryApp;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"Input$React.forwardRef\");\n$RefreshReg$(_c2, \"Input\");\n$RefreshReg$(_c3, \"Button\");\n$RefreshReg$(_c4, \"InventoryApp\");","map":{"version":3,"names":["React","useState","useEffect","useRef","XLSX","supabase","UploadScreen","generateMissingCountsPDF","jsxDEV","_jsxDEV","Fragment","_Fragment","Input","forwardRef","_c","props","ref","className","fileName","_jsxFileName","lineNumber","columnNumber","_c2","Button","_c3","InventoryApp","session","_s","username","role","userRole","currentUser","entries","setEntries","fileId","setFileId","reportList","setReportList","userList","setUserList","selectedUsers","setSelectedUsers","inputRefs","console","log","isAdmin","toString","toLowerCase","includes","loadReportList","loadUserList","data","error","from","select","order","ascending","map","u","handleUploadSubmit","file","activeUsers","alert","length","reader","FileReader","onload","evt","Uint8Array","target","result","workbook","read","type","sheetName","SheetNames","worksheet","Sheets","jsonData","utils","sheet_to_json","header","slice","filter","row","idx","undefined","rows","fileInsert","fileErr","insert","uploaded_by","single","message","file_id","id","chunkSize","Math","ceil","assignedEntries","index","userIndex","floor","upload_index","sku","on_hand","parseInt","description","assigned_to","insertErr","loadEntries","readAsArrayBuffer","allData","to","keepGoing","query","count","range","eq","e","push","handleInputChange","entryId","value","newEntries","entry","find","entered_by","update","then","getInputClass","onHand","diff","abs","handleGenerateMismatchReport","mismatched","csvRows","forEach","blob","Blob","join","url","URL","createObjectURL","a","document","createElement","href","download","Date","now","click","revokeObjectURL","handleDownloadMissingCounts","missing","focusNextEditableInput","startIndex","i","_entries$i","next","current","focus","children","onClick","auth","signOut","users","name","onSubmit","onChange","defaultValue","disabled","r","created_at","toLocaleString","_entry$count","_entry$count2","el","onKeyDown","key","preventDefault","_c4","$RefreshReg$"],"sources":["/Users/louiemonteverde/Desktop/inventory-report-final-v3/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport * as XLSX from \"xlsx\";\nimport { supabase } from \"./supabase\";\nimport UploadScreen from \"./UploadScreen\";\nimport { generateMissingCountsPDF } from \"./pdfUtils\";\n\nconst Input = React.forwardRef((props, ref) => (\n  <input\n    {...props}\n    ref={ref}\n    className={`px-2 py-1 rounded border ${props.className || \"border-gray-300\"}`}\n  />\n));\n\nconst Button = (props) => (\n  <button\n    {...props}\n    className=\"bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700\"\n  />\n);\n\nexport default function InventoryApp({ session }) {\n  const { username, role } = session;\n  const [userRole] = useState(role);\n  const [currentUser] = useState(username);\n  const [entries, setEntries] = useState([]);\n  const [fileId, setFileId] = useState(null);\n  const [reportList, setReportList] = useState([]);\n  const [userList, setUserList] = useState([]);\n  const [selectedUsers, setSelectedUsers] = useState([]);\n  const inputRefs = useRef([]);\n\n  // Debug role info\n  console.log(\"Session role raw:\", role);\n  console.log(\"App.js state userRole:\", userRole);\n\n  // Helper: check if admin\n  const isAdmin = userRole && userRole.toString().toLowerCase().includes(\"admin\");\n\n  useEffect(() => {\n    loadReportList();\n    loadUserList();\n  }, []);\n\n  const loadReportList = async () => {\n    const { data, error } = await supabase\n      .from(\"files\")\n      .select(\"id, created_at\")\n      .order(\"created_at\", { ascending: false });\n    if (!error) {\n      setReportList(data);\n    }\n  };\n\n  const loadUserList = async () => {\n    const { data, error } = await supabase.from(\"users\").select(\"username\");\n    if (!error) {\n      setUserList(data.map((u) => u.username));\n    }\n  };\n\n  // Upload flow with cleanup + user assignment\n  const handleUploadSubmit = async (file, activeUsers) => {\n    if (!file) {\n      alert(\"Please select a file.\");\n      return;\n    }\n    if (activeUsers.length === 0) {\n      alert(\"Please select at least one user.\");\n      return;\n    }\n    setSelectedUsers(activeUsers);\n\n    const reader = new FileReader();\n    reader.onload = async (evt) => {\n      const data = new Uint8Array(evt.target.result);\n\n      // Universal loader (CSV, XLS, XLSX, XML)\n      const workbook = XLSX.read(data, { type: \"array\" });\n      const sheetName = workbook.SheetNames[0];\n      const worksheet = workbook.Sheets[sheetName];\n\n      let jsonData = XLSX.utils.sheet_to_json(worksheet, { header: 1 });\n\n      // --- CLEANING ---\n      jsonData = jsonData.slice(5); // delete rows 1â€“5\n      if (jsonData.length > 0) {\n        jsonData[0][4] = \"USER\"; // set E1 header\n      }\n      jsonData = jsonData.filter((row, idx) => {\n        if (idx === 0) return true; // keep header\n        return row[1] !== undefined && row[1] !== null && row[1] !== \"\";\n      });\n\n      const rows = jsonData.slice(1);\n      if (rows.length === 0) {\n        alert(\"No valid rows found in file.\");\n        return;\n      }\n\n      // Register file\n      const { data: fileInsert, error: fileErr } = await supabase\n        .from(\"files\")\n        .insert([{ uploaded_by: currentUser }])\n        .select()\n        .single();\n      if (fileErr || !fileInsert) {\n        alert(\"File upload error: \" + fileErr.message);\n        return;\n      }\n\n      const file_id = fileInsert.id;\n      setFileId(file_id);\n\n      // Even split across selected users\n      const chunkSize = Math.ceil(rows.length / activeUsers.length);\n      const assignedEntries = rows.map((row, index) => {\n        const userIndex = Math.floor(index / chunkSize);\n        return {\n          file_id,\n          upload_index: index,\n          sku: row[0],                // Column A\n          on_hand: parseInt(row[1]),  // Column B\n          description: row[3] || \"\",  // Column D\n          assigned_to:\n            activeUsers[userIndex] || activeUsers[activeUsers.length - 1],\n        };\n      });\n\n      const { error: insertErr } = await supabase\n        .from(\"entries\")\n        .insert(assignedEntries);\n      if (insertErr) {\n        alert(\"Upload failed: \" + insertErr.message);\n        return;\n      }\n\n      loadEntries(file_id);\n    };\n\n    reader.readAsArrayBuffer(file);\n  };\n\n  const loadEntries = async (id) => {\n    const allData = [];\n    const chunkSize = 1000;\n    let from = 0;\n    let to = chunkSize - 1;\n    let keepGoing = true;\n\n    while (keepGoing) {\n      let query = supabase\n        .from(\"entries\")\n        .select(\n          \"id, file_id, upload_index, sku, on_hand, description, count, assigned_to\",\n          { count: \"exact\" }\n        )\n        .order(\"upload_index\", { ascending: true })\n        .range(from, to);\n\n      if (isAdmin) {\n        query = query.eq(\"file_id\", id);\n      } else {\n        query = query.eq(\"file_id\", id).eq(\"assigned_to\", currentUser);\n      }\n\n      const { data, error } = await query;\n\n      if (data) {\n        console.log(\n          \"Loaded entries:\",\n          data.map((e) => ({ sku: e.sku, assigned_to: e.assigned_to }))\n        );\n      }\n\n      if (error) {\n        console.error(\"Error loading entries:\", error);\n        break;\n      }\n\n      if (data.length > 0) {\n        allData.push(...data);\n      }\n\n      if (data.length < chunkSize) {\n        keepGoing = false;\n      } else {\n        from += chunkSize;\n        to += chunkSize;\n      }\n    }\n\n    setEntries(allData);\n    setFileId(id);\n  };\n\n  const handleInputChange = async (entryId, value, index) => {\n    const newEntries = [...entries];\n    const entry = newEntries.find((e) => e.id === entryId);\n    entry.count = value === \"\" ? null : parseInt(value);\n    entry.entered_by = currentUser;\n    setEntries(newEntries);\n\n    await supabase\n      .from(\"entries\")\n      .update({ count: entry.count, entered_by: currentUser })\n      .eq(\"id\", entryId)\n      .then(({ error }) => {\n        if (error) {\n          console.error(\"Error saving count:\", error);\n          alert(\"Failed to save count.\");\n        }\n      });\n  };\n\n  const getInputClass = (count, onHand) => {\n    if (count === undefined || count === null || count === \"\") return \"border-gray-300\";\n    const diff = Math.abs(count - onHand);\n    if (diff === 0) return \"border-green-500\";\n    if (diff <= 10) return \"border-yellow-400\";\n    if (diff <= 20) return \"border-orange-400\";\n    return \"border-red-500\";\n  };\n\n  const handleGenerateMismatchReport = () => {\n    const mismatched = entries.filter(\n      (e) => e.count !== undefined && e.count !== null && e.count !== e.on_hand\n    );\n    const csvRows = [\"SKU,On Hand,Count,Difference,User\"];\n    mismatched.forEach((e) => {\n      const diff = e.count - e.on_hand;\n      csvRows.push(`${e.sku},${e.on_hand},${e.count},${diff},${e.assigned_to}`);\n    });\n    const blob = new Blob([csvRows.join(\"\\n\")], { type: \"text/csv\" });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement(\"a\");\n    a.href = url;\n    a.download = `Mismatch_Report_${Date.now()}.csv`;\n    a.click();\n    URL.revokeObjectURL(url);\n  };\n\n  const handleDownloadMissingCounts = () => {\n    const missing = entries.filter((e) => e.count === null || e.count === undefined);\n    generateMissingCountsPDF(missing);\n  };\n\n  const focusNextEditableInput = (startIndex) => {\n    for (let i = startIndex + 1; i < entries.length; i++) {\n      if (entries[i]?.assigned_to === currentUser) {\n        const next = inputRefs.current[i];\n        if (next) {\n          next.focus();\n          break;\n        }\n      }\n    }\n  };\n\n  return (\n    <div className=\"p-6 w-full space-y-4\">\n      <div className=\"flex justify-between\">\n        <div className=\"text-gray-700 text-sm\">\n          Logged in as: {currentUser} ({userRole})\n        </div>\n        <Button onClick={() => supabase.auth.signOut()}>Logout</Button>\n      </div>\n\n      {isAdmin && (\n        <UploadScreen\n          users={userList.map((u) => ({ id: u, name: u }))}\n          onSubmit={handleUploadSubmit}\n        />\n      )}\n\n      <div className=\"max-w-md mx-auto w-full\">\n        <label className=\"block mb-1 font-semibold text-gray-800\">\n          Select Report:\n        </label>\n        <select\n          className=\"border rounded p-2 w-full\"\n          onChange={(e) => loadEntries(e.target.value)}\n          defaultValue=\"\"\n        >\n          <option value=\"\" disabled>\n            -- Select a Report --\n          </option>\n          {reportList.map((r) => (\n            <option key={r.id} value={r.id}>\n              {new Date(r.created_at).toLocaleString()}\n            </option>\n          ))}\n        </select>\n      </div>\n\n      {entries.length > 0 ? (\n        <>\n          <div className=\"overflow-x-auto w-full max-w-full\">\n            <table className=\"w-full table-auto border border-gray-300 text-sm text-center whitespace-nowrap\">\n              <thead className=\"bg-gray-100\">\n                <tr>\n                  <th className=\"border px-4 py-2\">SKU</th>\n                  {isAdmin && <th className=\"border px-4 py-2\">On Hand</th>}\n                  <th className=\"border px-4 py-2\">Count</th>\n                  {isAdmin && <th className=\"border px-4 py-2\">Description</th>}\n                  {isAdmin && <th className=\"border px-4 py-2\">User</th>}\n                </tr>\n              </thead>\n              <tbody>\n                {entries.map((entry, index) => (\n                  <tr key={entry.id} className=\"hover:bg-gray-50\">\n                    <td className=\"border px-4 py-2 font-semibold text-center\">{entry.sku}</td>\n\n                    {isAdmin && (\n                      <td className=\"border px-4 py-2 text-right\">{entry.on_hand}</td>\n                    )}\n\n                    <td className=\"border px-4 py-2\">\n                      {entry.assigned_to === currentUser || isAdmin ? (\n                        <Input\n                          ref={(el) => (inputRefs.current[index] = el)}\n                          type=\"number\"\n                          value={entry.count ?? \"\"}\n                          onChange={(e) => handleInputChange(entry.id, e.target.value, index)}\n                          onKeyDown={(e) => {\n                            if (e.key === \"Enter\") {\n                              e.preventDefault();\n                              focusNextEditableInput(index);\n                            }\n                          }}\n                          className={`${getInputClass(entry.count, entry.on_hand)} w-full text-center`}\n                        />\n                      ) : (\n                        <span className=\"block text-gray-600\">{entry.count ?? \"NA\"}</span>\n                      )}\n                    </td>\n\n                    {isAdmin && (\n                      <td className=\"border px-4 py-2 text-left\">{entry.description}</td>\n                    )}\n\n                    {isAdmin && (\n                      <td className=\"border px-4 py-2 text-center\">{entry.assigned_to || \"\"}</td>\n                    )}\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n\n          <div className=\"flex gap-2 mt-4\">\n            {!isAdmin && (\n              <Button onClick={handleDownloadMissingCounts}>Counts Needed</Button>\n            )}\n            {isAdmin && (\n              <>\n                <Button onClick={handleDownloadMissingCounts}>Counts Needed</Button>\n                <Button onClick={handleGenerateMismatchReport}>Mismatch Report</Button>\n              </>\n            )}\n          </div>\n        </>\n      ) : (\n        <p className=\"text-gray-500\">No report selected or no entries available yet.</p>\n      )}\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}