{"ast":null,"code":"var _jsxFileName = \"/Users/louiemonteverde/Documents/inventory-report-final-v2/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport * as XLSX from \"xlsx\";\nimport jsPDF from \"jspdf\";\nimport \"jspdf-autotable\";\nimport { supabase } from \"./supabase\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Input = /*#__PURE__*/React.forwardRef(_c = (props, ref) => /*#__PURE__*/_jsxDEV(\"input\", {\n  ...props,\n  ref: ref,\n  className: `px-2 py-1 rounded border ${props.className || \"border-gray-300\"}`\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 8,\n  columnNumber: 3\n}, this));\n_c2 = Input;\nconst Button = props => /*#__PURE__*/_jsxDEV(\"button\", {\n  ...props,\n  className: \"bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700\"\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 16,\n  columnNumber: 3\n}, this);\n_c3 = Button;\nconst InventoryApp = () => {\n  _s();\n  const [entries, setEntries] = useState([]);\n  useEffect(() => {\n    fetchEntries();\n  }, []);\n  const fetchEntries = async () => {\n    const {\n      data,\n      error\n    } = await supabase.from(\"entries\").select(\"*\").range(0, 9999); // Increased limit to handle more than 1000 rows\n\n    if (error) {\n      console.error(\"Error fetching entries:\", error);\n    } else {\n      setEntries(data);\n    }\n  };\n  const handleGenerateMismatchReport = () => {\n    const mismatched = entries.filter(e => e.count !== undefined && e.count !== null && e.count !== e.on_hand);\n    const csvRows = []; // Placeholder array to resolve syntax error\n    // Additional logic to populate csvRows can go here\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-4\",\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-xl font-bold mb-4\",\n      children: \"Inventory Report\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(InventoryApp, \"si2ZVsazrWomTuBdDT2zYRo3CE0=\");\n_c4 = InventoryApp;\nexport default InventoryApp;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"Input$React.forwardRef\");\n$RefreshReg$(_c2, \"Input\");\n$RefreshReg$(_c3, \"Button\");\n$RefreshReg$(_c4, \"InventoryApp\");","map":{"version":3,"names":["React","useState","useEffect","useRef","XLSX","jsPDF","supabase","jsxDEV","_jsxDEV","Input","forwardRef","_c","props","ref","className","fileName","_jsxFileName","lineNumber","columnNumber","_c2","Button","_c3","InventoryApp","_s","entries","setEntries","fetchEntries","data","error","from","select","range","console","handleGenerateMismatchReport","mismatched","filter","e","count","undefined","on_hand","csvRows","children","_c4","$RefreshReg$"],"sources":["/Users/louiemonteverde/Documents/inventory-report-final-v2/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport * as XLSX from \"xlsx\";\nimport jsPDF from \"jspdf\";\nimport \"jspdf-autotable\";\nimport { supabase } from \"./supabase\";\n\nconst Input = React.forwardRef((props, ref) => (\n  <input\n    {...props}\n    ref={ref}\n    className={`px-2 py-1 rounded border ${props.className || \"border-gray-300\"}`}\n  />\n));\n\nconst Button = (props) => (\n  <button\n    {...props}\n    className=\"bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700\"\n  />\n);\n\nconst InventoryApp = () => {\n  const [entries, setEntries] = useState([]);\n\n  useEffect(() => {\n    fetchEntries();\n  }, []);\n\n  const fetchEntries = async () => {\n    const { data, error } = await supabase\n      .from(\"entries\")\n      .select(\"*\")\n      .range(0, 9999); // Increased limit to handle more than 1000 rows\n\n    if (error) {\n      console.error(\"Error fetching entries:\", error);\n    } else {\n      setEntries(data);\n    }\n  };\n\n  const handleGenerateMismatchReport = () => {\n    const mismatched = entries.filter(\n      (e) => e.count !== undefined && e.count !== null && e.count !== e.on_hand\n    );\n    const csvRows = []; // Placeholder array to resolve syntax error\n    // Additional logic to populate csvRows can go here\n  };\n\n  return (\n    <div className=\"p-4\">\n      <h1 className=\"text-xl font-bold mb-4\">Inventory Report</h1>\n      {/* UI elements and inputs go here */}\n    </div>\n  );\n};\n\nexport default InventoryApp;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,OAAO,KAAKC,IAAI,MAAM,MAAM;AAC5B,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,iBAAiB;AACxB,SAASC,QAAQ,QAAQ,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,MAAMC,KAAK,gBAAGT,KAAK,CAACU,UAAU,CAAAC,EAAA,GAACA,CAACC,KAAK,EAAEC,GAAG,kBACxCL,OAAA;EAAA,GACMI,KAAK;EACTC,GAAG,EAAEA,GAAI;EACTC,SAAS,EAAE,4BAA4BF,KAAK,CAACE,SAAS,IAAI,iBAAiB;AAAG;EAAAC,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OAC/E,CACF,CAAC;AAACC,GAAA,GANGV,KAAK;AAQX,MAAMW,MAAM,GAAIR,KAAK,iBACnBJ,OAAA;EAAA,GACMI,KAAK;EACTE,SAAS,EAAC;AAA4D;EAAAC,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACvE,CACF;AAACG,GAAA,GALID,MAAM;AAOZ,MAAME,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGxB,QAAQ,CAAC,EAAE,CAAC;EAE1CC,SAAS,CAAC,MAAM;IACdwB,YAAY,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,MAAM;MAAEC,IAAI;MAAEC;IAAM,CAAC,GAAG,MAAMtB,QAAQ,CACnCuB,IAAI,CAAC,SAAS,CAAC,CACfC,MAAM,CAAC,GAAG,CAAC,CACXC,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;;IAEnB,IAAIH,KAAK,EAAE;MACTI,OAAO,CAACJ,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IACjD,CAAC,MAAM;MACLH,UAAU,CAACE,IAAI,CAAC;IAClB;EACF,CAAC;EAED,MAAMM,4BAA4B,GAAGA,CAAA,KAAM;IACzC,MAAMC,UAAU,GAAGV,OAAO,CAACW,MAAM,CAC9BC,CAAC,IAAKA,CAAC,CAACC,KAAK,KAAKC,SAAS,IAAIF,CAAC,CAACC,KAAK,KAAK,IAAI,IAAID,CAAC,CAACC,KAAK,KAAKD,CAAC,CAACG,OACpE,CAAC;IACD,MAAMC,OAAO,GAAG,EAAE,CAAC,CAAC;IACpB;EACF,CAAC;EAED,oBACEhC,OAAA;IAAKM,SAAS,EAAC,KAAK;IAAA2B,QAAA,eAClBjC,OAAA;MAAIM,SAAS,EAAC,wBAAwB;MAAA2B,QAAA,EAAC;IAAgB;MAAA1B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEzD,CAAC;AAEV,CAAC;AAACK,EAAA,CAlCID,YAAY;AAAAoB,GAAA,GAAZpB,YAAY;AAoClB,eAAeA,YAAY;AAAC,IAAAX,EAAA,EAAAQ,GAAA,EAAAE,GAAA,EAAAqB,GAAA;AAAAC,YAAA,CAAAhC,EAAA;AAAAgC,YAAA,CAAAxB,GAAA;AAAAwB,YAAA,CAAAtB,GAAA;AAAAsB,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}