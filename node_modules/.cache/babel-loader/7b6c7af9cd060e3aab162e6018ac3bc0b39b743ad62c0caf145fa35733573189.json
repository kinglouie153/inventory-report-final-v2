{"ast":null,"code":"var _jsxFileName = \"/Users/louiemonteverde/Documents/inventory-report-final-v2/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport * as XLSX from \"xlsx\";\nimport jsPDF from \"jspdf\";\nimport \"jspdf-autotable\";\nimport { supabase } from \"./supabase\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Input = /*#__PURE__*/React.forwardRef(_c = (props, ref) => /*#__PURE__*/_jsxDEV(\"input\", {\n  ...props,\n  ref: ref,\n  className: `px-2 py-1 rounded border ${props.className || \"border-gray-300\"}`\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 8,\n  columnNumber: 3\n}, this));\n_c2 = Input;\nconst Button = props => /*#__PURE__*/_jsxDEV(\"button\", {\n  ...props,\n  className: \"bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700\"\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 16,\n  columnNumber: 3\n}, this);\n_c3 = Button;\nexport default function InventoryApp({\n  session\n}) {\n  _s();\n  const {\n    username,\n    role\n  } = session;\n  const [userRole] = useState(role);\n  const [currentUser] = useState(username);\n  const [entries, setEntries] = useState([]);\n  const [fileId, setFileId] = useState(null);\n  const [reportList, setReportList] = useState([]);\n  const [userList, setUserList] = useState([]);\n  const [selectedUsers, setSelectedUsers] = useState([]);\n  const inputRefs = useRef([]);\n  useEffect(() => {\n    loadReportList();\n    loadUserList();\n  }, []);\n  const loadReportList = async () => {\n    const {\n      data,\n      error\n    } = await supabase.from(\"files\").select(\"id, created_at\").order(\"created_at\", {\n      ascending: false\n    });\n    if (!error) {\n      setReportList(data);\n    }\n  };\n  const loadUserList = async () => {\n    const {\n      data,\n      error\n    } = await supabase.from(\"users\").select(\"username\");\n    if (!error) {\n      setUserList(data.map(u => u.username));\n    }\n  };\n  const handleUpload = async e => {\n    const file = e.target.files[0];\n    if (!file || selectedUsers.length === 0) {\n      alert(\"Please select a file and choose at least one user.\");\n      return;\n    }\n    console.log(\"Reading file:\", file.name);\n    const reader = new FileReader();\n    reader.onload = async evt => {\n      const data = evt.target.result;\n      const workbook = XLSX.read(data, {\n        type: \"binary\"\n      });\n      const sheetName = workbook.SheetNames[0];\n      const worksheet = workbook.Sheets[sheetName];\n      const jsonData = XLSX.utils.sheet_to_json(worksheet, {\n        header: 1\n      });\n      const headers = jsonData[0];\n      const rows = jsonData.slice(1);\n      console.log(\"Parsed rows:\", rows.length);\n\n      // Save file to 'files' table\n      const {\n        data: fileInsert,\n        error: fileErr\n      } = await supabase.from(\"files\").insert([{\n        uploaded_by: currentUser\n      }]).select().single();\n      if (fileErr) {\n        console.error(\"File insert error:\", fileErr);\n        alert(\"Failed to save file to Supabase.\");\n        return;\n      }\n      const file_id = fileInsert === null || fileInsert === void 0 ? void 0 : fileInsert.id;\n      console.log(\"Created file ID:\", file_id);\n      setFileId(file_id);\n      const assignedEntries = rows.map((row, index) => ({\n        file_id,\n        sku: row[0],\n        on_hand: parseInt(row[1]),\n        description: row[3] || \"\",\n        assigned_to: selectedUsers[index % selectedUsers.length]\n      }));\n      console.log(\"Assigned entries:\", assignedEntries);\n      const {\n        error: entryErr\n      } = await supabase.from(\"entries\").insert(assignedEntries);\n      if (entryErr) {\n        console.error(\"Entry insert error:\", entryErr);\n        alert(\"Failed to upload entries.\");\n      } else {\n        console.log(\"Entries uploaded successfully\");\n        alert(\"Upload complete!\");\n        loadEntries(file_id);\n        loadReportList();\n      }\n    };\n    reader.readAsBinaryString(file);\n  };\n  const loadEntries = async id => {\n    const {\n      data,\n      error\n    } = await supabase.from(\"entries\").select(\"*\").eq(\"file_id\", id);\n    if (!error) {\n      setEntries(data);\n      setFileId(id);\n    }\n  };\n  const handleInputChange = async (entryId, value, index) => {\n    const newEntries = [...entries];\n    const entry = newEntries.find(e => e.id === entryId);\n    entry.count = value === \"\" ? null : parseInt(value);\n    entry.entered_by = currentUser;\n    setEntries(newEntries);\n    await supabase.from(\"entries\").update({\n      count: entry.count,\n      entered_by: currentUser\n    }).eq(\"id\", entryId);\n  };\n  const getInputClass = (count, onHand) => {\n    if (count === undefined || count === null || count === \"\") return \"border-gray-300\";\n    const diff = Math.abs(count - onHand);\n    if (diff === 0) return \"border-green-500\";\n    if (diff <= 10) return \"border-yellow-400\";\n    if (diff <= 20) return \"border-orange-400\";\n    return \"border-red-500\";\n  };\n  const handleGenerateMismatchReport = () => {\n    const mismatched = entries.filter(e => e.count !== undefined && e.count !== null && e.count !== e.on_hand);\n    const csvRows = [\"SKU,On Hand,Count,Difference\"];\n    mismatched.forEach(e => {\n      const diff = e.count - e.on_hand;\n      csvRows.push(`${e.sku},${e.on_hand},${e.count},${diff}`);\n    });\n    const blob = new Blob([csvRows.join(\"\\n\")], {\n      type: \"text/csv\"\n    });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement(\"a\");\n    a.href = url;\n    a.download = `Mismatch_Report_${Date.now()}.csv`;\n    a.click();\n    URL.revokeObjectURL(url);\n  };\n  const handleDownloadMissingCounts = () => {\n    const doc = new jsPDF();\n    const missing = entries.filter(e => e.count === null || e.count === undefined);\n    const rows = missing.map(e => {\n      var _e$count;\n      return [e.sku, (_e$count = e.count) !== null && _e$count !== void 0 ? _e$count : \"\"];\n    });\n    doc.text(\"Items Missing Physical Count\", 14, 16);\n    doc.autoTable({\n      head: [[\"SKU\", \"Count\"]],\n      body: rows,\n      startY: 20\n    });\n    doc.save(`Missing_Counts_${Date.now()}.pdf`);\n  };\n  const handlePrintMyRows = () => {\n    const content = entries.filter(e => e.assigned_to === currentUser).map(e => `${e.sku}\\t\\t_____________`).join(\"\\n\");\n    const printWindow = window.open(\"\", \"_blank\");\n    printWindow.document.write(\"<pre>\" + content + \"</pre>\");\n    printWindow.print();\n    printWindow.close();\n  };\n  const focusNextEditableInput = startIndex => {\n    for (let i = startIndex + 1; i < entries.length; i++) {\n      var _entries$i;\n      if (((_entries$i = entries[i]) === null || _entries$i === void 0 ? void 0 : _entries$i.assigned_to) === currentUser) {\n        const next = inputRefs.current[i];\n        if (next) {\n          next.focus();\n          break;\n        }\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-6 max-w-6xl mx-auto space-y-4\",\n    children: [userRole === \"admin\" && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-xl font-semibold mb-2\",\n        children: \"Upload Inventory File\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: handleUpload,\n        className: \"mb-2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block mb-1\",\n          children: \"Select Active Users:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          multiple: true,\n          value: selectedUsers,\n          onChange: e => setSelectedUsers(Array.from(e.target.selectedOptions, opt => opt.value)),\n          className: \"border rounded p-2 w-full\",\n          children: userList.map(u => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: u,\n            children: u\n          }, u, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"block mb-1 font-semibold\",\n        children: \"Select Report:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"border rounded p-2\",\n        onChange: e => loadEntries(e.target.value),\n        defaultValue: \"\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          disabled: true,\n          children: \"-- Select a Report --\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 11\n        }, this), reportList.map(r => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: r.id,\n          children: new Date(r.created_at).toLocaleString()\n        }, r.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 7\n    }, this), entries.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"overflow-x-auto\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"min-w-full border mt-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"border px-2 py-1\",\n              children: \"SKU\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"border px-2 py-1\",\n              children: \"On Hand\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"border px-2 py-1\",\n              children: \"Count\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: entries.map((entry, index) => {\n            var _entry$count, _entry$count2;\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"border px-2 py-1 font-semibold\",\n                children: entry.sku\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 260,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"border px-2 py-1\",\n                children: entry.on_hand\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 261,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"border px-2 py-1\",\n                children: entry.assigned_to === currentUser ? /*#__PURE__*/_jsxDEV(Input, {\n                  ref: el => inputRefs.current[index] = el,\n                  type: \"number\",\n                  value: (_entry$count = entry.count) !== null && _entry$count !== void 0 ? _entry$count : \"\",\n                  onChange: e => handleInputChange(entry.id, e.target.value, index),\n                  onKeyDown: e => {\n                    if (e.key === \"Enter\") {\n                      e.preventDefault();\n                      focusNextEditableInput(index);\n                    }\n                  },\n                  className: getInputClass(entry.count, entry.on_hand)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 264,\n                  columnNumber: 23\n                }, this) : (_entry$count2 = entry.count) !== null && _entry$count2 !== void 0 ? _entry$count2 : \"NA\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 262,\n                columnNumber: 19\n              }, this)]\n            }, entry.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 9\n    }, this), userRole === \"admin\" && entries.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex gap-2\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleGenerateMismatchReport,\n        children: \"Generate Report\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleDownloadMissingCounts,\n        children: \"Download Missing Counts PDF\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 9\n    }, this), userRole === \"user\" && entries.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex gap-2\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleDownloadMissingCounts,\n        children: \"Show Missing Counts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handlePrintMyRows,\n        children: \"Print My Rows\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 204,\n    columnNumber: 5\n  }, this);\n}\n_s(InventoryApp, \"0GBZkDTV3vXXH3uexksJqAkiRZg=\");\n_c4 = InventoryApp;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"Input$React.forwardRef\");\n$RefreshReg$(_c2, \"Input\");\n$RefreshReg$(_c3, \"Button\");\n$RefreshReg$(_c4, \"InventoryApp\");","map":{"version":3,"names":["React","useState","useEffect","useRef","XLSX","jsPDF","supabase","jsxDEV","_jsxDEV","Input","forwardRef","_c","props","ref","className","fileName","_jsxFileName","lineNumber","columnNumber","_c2","Button","_c3","InventoryApp","session","_s","username","role","userRole","currentUser","entries","setEntries","fileId","setFileId","reportList","setReportList","userList","setUserList","selectedUsers","setSelectedUsers","inputRefs","loadReportList","loadUserList","data","error","from","select","order","ascending","map","u","handleUpload","e","file","target","files","length","alert","console","log","name","reader","FileReader","onload","evt","result","workbook","read","type","sheetName","SheetNames","worksheet","Sheets","jsonData","utils","sheet_to_json","header","headers","rows","slice","fileInsert","fileErr","insert","uploaded_by","single","file_id","id","assignedEntries","row","index","sku","on_hand","parseInt","description","assigned_to","entryErr","loadEntries","readAsBinaryString","eq","handleInputChange","entryId","value","newEntries","entry","find","count","entered_by","update","getInputClass","onHand","undefined","diff","Math","abs","handleGenerateMismatchReport","mismatched","filter","csvRows","forEach","push","blob","Blob","join","url","URL","createObjectURL","a","document","createElement","href","download","Date","now","click","revokeObjectURL","handleDownloadMissingCounts","doc","missing","_e$count","text","autoTable","head","body","startY","save","handlePrintMyRows","content","printWindow","window","open","write","print","close","focusNextEditableInput","startIndex","i","_entries$i","next","current","focus","children","onChange","multiple","Array","selectedOptions","opt","defaultValue","disabled","r","created_at","toLocaleString","_entry$count","_entry$count2","el","onKeyDown","key","preventDefault","onClick","_c4","$RefreshReg$"],"sources":["/Users/louiemonteverde/Documents/inventory-report-final-v2/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport * as XLSX from \"xlsx\";\nimport jsPDF from \"jspdf\";\nimport \"jspdf-autotable\";\nimport { supabase } from \"./supabase\";\n\nconst Input = React.forwardRef((props, ref) => (\n  <input\n    {...props}\n    ref={ref}\n    className={`px-2 py-1 rounded border ${props.className || \"border-gray-300\"}`}\n  />\n));\n\nconst Button = (props) => (\n  <button\n    {...props}\n    className=\"bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700\"\n  />\n);\n\nexport default function InventoryApp({ session }) {\n  const { username, role } = session;\n  const [userRole] = useState(role);\n  const [currentUser] = useState(username);\n  const [entries, setEntries] = useState([]);\n  const [fileId, setFileId] = useState(null);\n  const [reportList, setReportList] = useState([]);\n  const [userList, setUserList] = useState([]);\n  const [selectedUsers, setSelectedUsers] = useState([]);\n  const inputRefs = useRef([]);\n\n  useEffect(() => {\n    loadReportList();\n    loadUserList();\n  }, []);\n\n  const loadReportList = async () => {\n    const { data, error } = await supabase\n      .from(\"files\")\n      .select(\"id, created_at\")\n      .order(\"created_at\", { ascending: false });\n    if (!error) {\n      setReportList(data);\n    }\n  };\n\n  const loadUserList = async () => {\n    const { data, error } = await supabase.from(\"users\").select(\"username\");\n    if (!error) {\n      setUserList(data.map((u) => u.username));\n    }\n  };\n\n  const handleUpload = async (e) => {\n    const file = e.target.files[0];\n    if (!file || selectedUsers.length === 0) {\n      alert(\"Please select a file and choose at least one user.\");\n      return;\n    }\n  \n    console.log(\"Reading file:\", file.name);\n  \n    const reader = new FileReader();\n    reader.onload = async (evt) => {\n      const data = evt.target.result;\n      const workbook = XLSX.read(data, { type: \"binary\" });\n      const sheetName = workbook.SheetNames[0];\n      const worksheet = workbook.Sheets[sheetName];\n      const jsonData = XLSX.utils.sheet_to_json(worksheet, { header: 1 });\n  \n      const headers = jsonData[0];\n      const rows = jsonData.slice(1);\n  \n      console.log(\"Parsed rows:\", rows.length);\n  \n      // Save file to 'files' table\n      const { data: fileInsert, error: fileErr } = await supabase\n        .from(\"files\")\n        .insert([{ uploaded_by: currentUser }])\n        .select()\n        .single();\n  \n      if (fileErr) {\n        console.error(\"File insert error:\", fileErr);\n        alert(\"Failed to save file to Supabase.\");\n        return;\n      }\n  \n      const file_id = fileInsert?.id;\n      console.log(\"Created file ID:\", file_id);\n      setFileId(file_id);\n  \n      const assignedEntries = rows.map((row, index) => ({\n        file_id,\n        sku: row[0],\n        on_hand: parseInt(row[1]),\n        description: row[3] || \"\",\n        assigned_to: selectedUsers[index % selectedUsers.length],\n      }));\n  \n      console.log(\"Assigned entries:\", assignedEntries);\n  \n      const { error: entryErr } = await supabase.from(\"entries\").insert(assignedEntries);\n      if (entryErr) {\n        console.error(\"Entry insert error:\", entryErr);\n        alert(\"Failed to upload entries.\");\n      } else {\n        console.log(\"Entries uploaded successfully\");\n        alert(\"Upload complete!\");\n        loadEntries(file_id);\n        loadReportList();\n      }\n    };\n  \n    reader.readAsBinaryString(file);\n  };\n  \n  const loadEntries = async (id) => {\n    const { data, error } = await supabase\n      .from(\"entries\")\n      .select(\"*\")\n      .eq(\"file_id\", id);\n\n    if (!error) {\n      setEntries(data);\n      setFileId(id);\n    }\n  };\n\n  const handleInputChange = async (entryId, value, index) => {\n    const newEntries = [...entries];\n    const entry = newEntries.find((e) => e.id === entryId);\n    entry.count = value === \"\" ? null : parseInt(value);\n    entry.entered_by = currentUser;\n    setEntries(newEntries);\n\n    await supabase\n      .from(\"entries\")\n      .update({ count: entry.count, entered_by: currentUser })\n      .eq(\"id\", entryId);\n  };\n\n  const getInputClass = (count, onHand) => {\n    if (count === undefined || count === null || count === \"\") return \"border-gray-300\";\n    const diff = Math.abs(count - onHand);\n    if (diff === 0) return \"border-green-500\";\n    if (diff <= 10) return \"border-yellow-400\";\n    if (diff <= 20) return \"border-orange-400\";\n    return \"border-red-500\";\n  };\n\n  const handleGenerateMismatchReport = () => {\n    const mismatched = entries.filter(\n      (e) => e.count !== undefined && e.count !== null && e.count !== e.on_hand\n    );\n    const csvRows = [\"SKU,On Hand,Count,Difference\"];\n    mismatched.forEach((e) => {\n      const diff = e.count - e.on_hand;\n      csvRows.push(`${e.sku},${e.on_hand},${e.count},${diff}`);\n    });\n    const blob = new Blob([csvRows.join(\"\\n\")], { type: \"text/csv\" });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement(\"a\");\n    a.href = url;\n    a.download = `Mismatch_Report_${Date.now()}.csv`;\n    a.click();\n    URL.revokeObjectURL(url);\n  };\n\n  const handleDownloadMissingCounts = () => {\n    const doc = new jsPDF();\n    const missing = entries.filter((e) => e.count === null || e.count === undefined);\n    const rows = missing.map((e) => [e.sku, e.count ?? \"\"]);\n    doc.text(\"Items Missing Physical Count\", 14, 16);\n    doc.autoTable({ head: [[\"SKU\", \"Count\"]], body: rows, startY: 20 });\n    doc.save(`Missing_Counts_${Date.now()}.pdf`);\n  };\n\n  const handlePrintMyRows = () => {\n    const content = entries\n      .filter((e) => e.assigned_to === currentUser)\n      .map((e) => `${e.sku}\\t\\t_____________`)\n      .join(\"\\n\");\n    const printWindow = window.open(\"\", \"_blank\");\n    printWindow.document.write(\"<pre>\" + content + \"</pre>\");\n    printWindow.print();\n    printWindow.close();\n  };\n\n  const focusNextEditableInput = (startIndex) => {\n    for (let i = startIndex + 1; i < entries.length; i++) {\n      if (entries[i]?.assigned_to === currentUser) {\n        const next = inputRefs.current[i];\n        if (next) {\n          next.focus();\n          break;\n        }\n      }\n    }\n  };\n\n  return (\n    <div className=\"p-6 max-w-6xl mx-auto space-y-4\">\n      {userRole === \"admin\" && (\n        <div>\n          <h2 className=\"text-xl font-semibold mb-2\">Upload Inventory File</h2>\n          <input type=\"file\" onChange={handleUpload} className=\"mb-2\" />\n          <div className=\"mb-4\">\n            <label className=\"block mb-1\">Select Active Users:</label>\n            <select\n              multiple\n              value={selectedUsers}\n              onChange={(e) =>\n                setSelectedUsers(Array.from(e.target.selectedOptions, (opt) => opt.value))\n              }\n              className=\"border rounded p-2 w-full\"\n            >\n              {userList.map((u) => (\n                <option key={u} value={u}>\n                  {u}\n                </option>\n              ))}\n            </select>\n          </div>\n        </div>\n      )}\n\n      <div>\n        <label className=\"block mb-1 font-semibold\">Select Report:</label>\n        <select\n          className=\"border rounded p-2\"\n          onChange={(e) => loadEntries(e.target.value)}\n          defaultValue=\"\"\n        >\n          <option value=\"\" disabled>\n            -- Select a Report --\n          </option>\n          {reportList.map((r) => (\n            <option key={r.id} value={r.id}>\n              {new Date(r.created_at).toLocaleString()}\n            </option>\n          ))}\n        </select>\n      </div>\n\n      {entries.length > 0 && (\n        <div className=\"overflow-x-auto\">\n          <table className=\"min-w-full border mt-4\">\n            <thead>\n              <tr>\n                <th className=\"border px-2 py-1\">SKU</th>\n                <th className=\"border px-2 py-1\">On Hand</th>\n                <th className=\"border px-2 py-1\">Count</th>\n              </tr>\n            </thead>\n            <tbody>\n              {entries.map((entry, index) => (\n                <tr key={entry.id}>\n                  <td className=\"border px-2 py-1 font-semibold\">{entry.sku}</td>\n                  <td className=\"border px-2 py-1\">{entry.on_hand}</td>\n                  <td className=\"border px-2 py-1\">\n                    {entry.assigned_to === currentUser ? (\n                      <Input\n                        ref={(el) => (inputRefs.current[index] = el)}\n                        type=\"number\"\n                        value={entry.count ?? \"\"}\n                        onChange={(e) => handleInputChange(entry.id, e.target.value, index)}\n                        onKeyDown={(e) => {\n                          if (e.key === \"Enter\") {\n                            e.preventDefault();\n                            focusNextEditableInput(index);\n                          }\n                        }}\n                        className={getInputClass(entry.count, entry.on_hand)}\n                      />\n                    ) : (\n                      entry.count ?? \"NA\"\n                    )}\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      )}\n\n      {userRole === \"admin\" && entries.length > 0 && (\n        <div className=\"flex gap-2\">\n          <Button onClick={handleGenerateMismatchReport}>Generate Report</Button>\n          <Button onClick={handleDownloadMissingCounts}>Download Missing Counts PDF</Button>\n        </div>\n      )}\n\n      {userRole === \"user\" && entries.length > 0 && (\n        <div className=\"flex gap-2\">\n          <Button onClick={handleDownloadMissingCounts}>Show Missing Counts</Button>\n          <Button onClick={handlePrintMyRows}>Print My Rows</Button>\n        </div>\n      )}\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}