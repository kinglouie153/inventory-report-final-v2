{"ast":null,"code":"import jsPDF from \"jspdf\";\nimport \"jspdf-autotable\";\n\n/**\n * Generate a \"Counts Needed\" PDF with two columns: (SKU | Count) (SKU | Count)\n * @param {Array<{sku: string}>} missingRows - entries lacking count\n */\nexport const generateMissingCountsPDF = missingRows => {\n  const doc = new jsPDF({\n    orientation: \"portrait\",\n    unit: \"pt\",\n    format: \"letter\"\n  });\n  doc.setFont(\"helvetica\", \"normal\");\n  doc.setFontSize(12);\n  doc.text(\"Counts Needed\", 40, 40);\n\n  // Build rows with pairs of SKUs\n  const rows = [];\n  for (let i = 0; i < missingRows.length; i += 2) {\n    var _missingRows$i, _missingRows;\n    const leftSKU = ((_missingRows$i = missingRows[i]) === null || _missingRows$i === void 0 ? void 0 : _missingRows$i.sku) || \"\";\n    const rightSKU = ((_missingRows = missingRows[i + 1]) === null || _missingRows === void 0 ? void 0 : _missingRows.sku) || \"\";\n    rows.push([leftSKU, \"__________\", rightSKU, \"__________\"]);\n  }\n  doc.autoTable({\n    startY: 60,\n    head: [[\"SKU\", \"Count\", \"SKU\", \"Count\"]],\n    body: rows,\n    styles: {\n      fontSize: 12,\n      cellPadding: 6\n    },\n    headStyles: {\n      fillColor: [41, 128, 185],\n      textColor: 255\n    },\n    tableLineColor: [200, 200, 200],\n    tableLineWidth: 0.5,\n    theme: \"grid\",\n    margin: {\n      left: 40,\n      right: 40\n    },\n    columnStyles: {\n      0: {\n        cellWidth: 120\n      },\n      1: {\n        cellWidth: 80\n      },\n      2: {\n        cellWidth: 120\n      },\n      3: {\n        cellWidth: 80\n      }\n    }\n  });\n  doc.save(\"counts-needed.pdf\");\n};","map":{"version":3,"names":["jsPDF","generateMissingCountsPDF","missingRows","doc","orientation","unit","format","setFont","setFontSize","text","rows","i","length","_missingRows$i","_missingRows","leftSKU","sku","rightSKU","push","autoTable","startY","head","body","styles","fontSize","cellPadding","headStyles","fillColor","textColor","tableLineColor","tableLineWidth","theme","margin","left","right","columnStyles","cellWidth","save"],"sources":["/Users/louiemonteverde/Desktop/inventory-report-final-v2/src/pdfUtils.js"],"sourcesContent":["import jsPDF from \"jspdf\";\nimport \"jspdf-autotable\";\n\n/**\n * Generate a \"Counts Needed\" PDF with two columns: (SKU | Count) (SKU | Count)\n * @param {Array<{sku: string}>} missingRows - entries lacking count\n */\nexport const generateMissingCountsPDF = (missingRows) => {\n  const doc = new jsPDF({ orientation: \"portrait\", unit: \"pt\", format: \"letter\" });\n\n  doc.setFont(\"helvetica\", \"normal\");\n  doc.setFontSize(12);\n  doc.text(\"Counts Needed\", 40, 40);\n\n  // Build rows with pairs of SKUs\n  const rows = [];\n  for (let i = 0; i < missingRows.length; i += 2) {\n    const leftSKU = missingRows[i]?.sku || \"\";\n    const rightSKU = missingRows[i + 1]?.sku || \"\";\n    rows.push([leftSKU, \"__________\", rightSKU, \"__________\"]);\n  }\n\n  doc.autoTable({\n    startY: 60,\n    head: [[\"SKU\", \"Count\", \"SKU\", \"Count\"]],\n    body: rows,\n    styles: { fontSize: 12, cellPadding: 6 },\n    headStyles: { fillColor: [41, 128, 185], textColor: 255 },\n    tableLineColor: [200, 200, 200],\n    tableLineWidth: 0.5,\n    theme: \"grid\",\n    margin: { left: 40, right: 40 },\n    columnStyles: {\n      0: { cellWidth: 120 },\n      1: { cellWidth: 80 },\n      2: { cellWidth: 120 },\n      3: { cellWidth: 80 },\n    },\n  });\n\n  doc.save(\"counts-needed.pdf\");\n};\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,iBAAiB;;AAExB;AACA;AACA;AACA;AACA,OAAO,MAAMC,wBAAwB,GAAIC,WAAW,IAAK;EACvD,MAAMC,GAAG,GAAG,IAAIH,KAAK,CAAC;IAAEI,WAAW,EAAE,UAAU;IAAEC,IAAI,EAAE,IAAI;IAAEC,MAAM,EAAE;EAAS,CAAC,CAAC;EAEhFH,GAAG,CAACI,OAAO,CAAC,WAAW,EAAE,QAAQ,CAAC;EAClCJ,GAAG,CAACK,WAAW,CAAC,EAAE,CAAC;EACnBL,GAAG,CAACM,IAAI,CAAC,eAAe,EAAE,EAAE,EAAE,EAAE,CAAC;;EAEjC;EACA,MAAMC,IAAI,GAAG,EAAE;EACf,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGT,WAAW,CAACU,MAAM,EAAED,CAAC,IAAI,CAAC,EAAE;IAAA,IAAAE,cAAA,EAAAC,YAAA;IAC9C,MAAMC,OAAO,GAAG,EAAAF,cAAA,GAAAX,WAAW,CAACS,CAAC,CAAC,cAAAE,cAAA,uBAAdA,cAAA,CAAgBG,GAAG,KAAI,EAAE;IACzC,MAAMC,QAAQ,GAAG,EAAAH,YAAA,GAAAZ,WAAW,CAACS,CAAC,GAAG,CAAC,CAAC,cAAAG,YAAA,uBAAlBA,YAAA,CAAoBE,GAAG,KAAI,EAAE;IAC9CN,IAAI,CAACQ,IAAI,CAAC,CAACH,OAAO,EAAE,YAAY,EAAEE,QAAQ,EAAE,YAAY,CAAC,CAAC;EAC5D;EAEAd,GAAG,CAACgB,SAAS,CAAC;IACZC,MAAM,EAAE,EAAE;IACVC,IAAI,EAAE,CAAC,CAAC,KAAK,EAAE,OAAO,EAAE,KAAK,EAAE,OAAO,CAAC,CAAC;IACxCC,IAAI,EAAEZ,IAAI;IACVa,MAAM,EAAE;MAAEC,QAAQ,EAAE,EAAE;MAAEC,WAAW,EAAE;IAAE,CAAC;IACxCC,UAAU,EAAE;MAAEC,SAAS,EAAE,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC;MAAEC,SAAS,EAAE;IAAI,CAAC;IACzDC,cAAc,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;IAC/BC,cAAc,EAAE,GAAG;IACnBC,KAAK,EAAE,MAAM;IACbC,MAAM,EAAE;MAAEC,IAAI,EAAE,EAAE;MAAEC,KAAK,EAAE;IAAG,CAAC;IAC/BC,YAAY,EAAE;MACZ,CAAC,EAAE;QAAEC,SAAS,EAAE;MAAI,CAAC;MACrB,CAAC,EAAE;QAAEA,SAAS,EAAE;MAAG,CAAC;MACpB,CAAC,EAAE;QAAEA,SAAS,EAAE;MAAI,CAAC;MACrB,CAAC,EAAE;QAAEA,SAAS,EAAE;MAAG;IACrB;EACF,CAAC,CAAC;EAEFjC,GAAG,CAACkC,IAAI,CAAC,mBAAmB,CAAC;AAC/B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}