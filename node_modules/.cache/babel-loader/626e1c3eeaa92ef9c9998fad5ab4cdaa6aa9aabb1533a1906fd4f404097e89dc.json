{"ast":null,"code":"var _jsxFileName = \"/Users/louiemonteverde/Desktop/inventory-report-final-v3/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport * as XLSX from \"xlsx\";\nimport { supabase } from \"./supabase\";\nimport UploadScreen from \"./UploadScreen\";\nimport { generateMissingCountsPDF } from \"./pdfUtils\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Input = /*#__PURE__*/React.forwardRef(_c = (props, ref) => /*#__PURE__*/_jsxDEV(\"input\", {\n  ...props,\n  ref: ref,\n  className: `px-2 py-1 rounded border ${props.className || \"border-gray-300\"}`\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 8,\n  columnNumber: 3\n}, this));\n_c2 = Input;\nconst Button = props => /*#__PURE__*/_jsxDEV(\"button\", {\n  ...props,\n  className: \"bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700\"\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 16,\n  columnNumber: 3\n}, this);\n_c3 = Button;\nexport default function InventoryApp({\n  session\n}) {\n  _s();\n  const {\n    username,\n    role\n  } = session;\n  const [userRole] = useState(role);\n  const [currentUser] = useState(username);\n  const [entries, setEntries] = useState([]);\n  const [fileId, setFileId] = useState(null);\n  const [reportList, setReportList] = useState([]);\n  const [userList, setUserList] = useState([]);\n  const [selectedUsers, setSelectedUsers] = useState([]);\n  const inputRefs = useRef([]);\n  const isAdmin = (userRole || \"\").toLowerCase().includes(\"admin\");\n\n  // Debug role once per mount\n  useEffect(() => {\n    console.log(\"Session role:\", role);\n    console.log(\"App state userRole:\", userRole);\n  }, [role, userRole]);\n  useEffect(() => {\n    loadReportList();\n    loadUserList();\n  }, []);\n  const loadReportList = async () => {\n    const {\n      data,\n      error\n    } = await supabase.from(\"files\").select(\"id, created_at\").order(\"created_at\", {\n      ascending: false\n    });\n    if (!error) setReportList(data || []);\n  };\n  const loadUserList = async () => {\n    const {\n      data,\n      error\n    } = await supabase.from(\"users\").select(\"username\");\n    if (!error) setUserList((data || []).map(u => u.username));\n  };\n\n  // Upload + clean + assign evenly (preserving original order)\n  const handleUploadSubmit = async (file, activeUsers) => {\n    if (!file) {\n      alert(\"Please select a file.\");\n      return;\n    }\n    if (!activeUsers || activeUsers.length === 0) {\n      alert(\"Please select at least one user.\");\n      return;\n    }\n    setSelectedUsers(activeUsers);\n    const reader = new FileReader();\n    reader.onload = async evt => {\n      const u8 = new Uint8Array(evt.target.result);\n      // Universal loader: CSV/XLS/XLSX/XML\n      const workbook = XLSX.read(u8, {\n        type: \"array\"\n      });\n      const sheetName = workbook.SheetNames[0];\n      const worksheet = workbook.Sheets[sheetName];\n\n      // Read as a 2D array\n      let data2d = XLSX.utils.sheet_to_json(worksheet, {\n        header: 1\n      });\n\n      // --- CLEANING ---\n      // 1) Delete rows 1â€“5\n      data2d = data2d.slice(5);\n      if (data2d.length === 0) {\n        alert(\"No rows found after cleaning.\");\n        return;\n      }\n\n      // 2) Set USER header at E1 (index 4)\n      if (!data2d[0]) data2d[0] = [];\n      data2d[0][4] = \"USER\";\n\n      // 3) Remove entire rows with blank Column B (index 1), but keep header\n      data2d = data2d.filter((row, idx) => {\n        if (idx === 0) return true; // keep header\n        const colB = row === null || row === void 0 ? void 0 : row[1];\n        return colB !== undefined && colB !== null && String(colB).trim() !== \"\";\n      });\n\n      // Data rows (skip header row)\n      const rows = data2d.slice(1);\n      if (rows.length === 0) {\n        alert(\"No valid data rows after cleaning.\");\n        return;\n      }\n\n      // Create a new file record\n      const {\n        data: fileInsert,\n        error: fileErr\n      } = await supabase.from(\"files\").insert([{\n        uploaded_by: currentUser\n      }]).select().single();\n      if (fileErr || !fileInsert) {\n        alert(\"File upload error: \" + ((fileErr === null || fileErr === void 0 ? void 0 : fileErr.message) || \"unknown error\"));\n        return;\n      }\n      const newFileId = fileInsert.id;\n      setFileId(newFileId);\n\n      // Split evenly by contiguous blocks, preserving order\n      const chunkSize = Math.ceil(rows.length / activeUsers.length);\n      const assignedEntries = rows.map((row, index) => {\n        var _row$;\n        const userIndex = Math.floor(index / chunkSize);\n        return {\n          file_id: newFileId,\n          upload_index: index,\n          sku: (_row$ = row === null || row === void 0 ? void 0 : row[0]) !== null && _row$ !== void 0 ? _row$ : \"\",\n          // Column A  (SKU)\n          on_hand: (row === null || row === void 0 ? void 0 : row[1]) != null ? parseInt(row[1], 10) : null,\n          // Column B (On Hand)\n          description: row !== null && row !== void 0 && row[3] ? String(row[3]) : \"\",\n          // Column D\n          assigned_to: activeUsers[userIndex] || activeUsers[activeUsers.length - 1]\n        };\n      });\n      const {\n        error: insertErr\n      } = await supabase.from(\"entries\").insert(assignedEntries);\n      if (insertErr) {\n        alert(\"Upload failed: \" + insertErr.message);\n        return;\n      }\n      loadEntries(newFileId);\n    };\n\n    // Universal read mode for all Excel flavors\n    reader.readAsArrayBuffer(file);\n  };\n  const loadEntries = async id => {\n    const allData = [];\n    const chunkSize = 1000;\n    let from = 0;\n    let to = chunkSize - 1;\n    let keepGoing = true;\n    while (keepGoing) {\n      let query = supabase.from(\"entries\").select(\"id, file_id, upload_index, sku, on_hand, description, count, assigned_to\", {\n        count: \"exact\"\n      }).order(\"upload_index\", {\n        ascending: true\n      }).range(from, to);\n      if (isAdmin) {\n        query = query.eq(\"file_id\", id);\n      } else {\n        query = query.eq(\"file_id\", id).eq(\"assigned_to\", currentUser);\n      }\n      const {\n        data,\n        error\n      } = await query;\n      console.log(\"Sample entries returned:\", data === null || data === void 0 ? void 0 : data.slice(0, 5));\n      if (error) {\n        console.error(\"Error loading entries:\", error);\n        break;\n      }\n      if (data && data.length > 0) {\n        allData.push(...data);\n      }\n      if (!data || data.length < chunkSize) {\n        keepGoing = false;\n      } else {\n        from += chunkSize;\n        to += chunkSize;\n      }\n    }\n\n    // small debug sample so console stays readable\n    console.log(\"Loaded sample entries:\", allData.slice(0, 10).map(e => ({\n      sku: e.sku,\n      assigned_to: e.assigned_to\n    })));\n    setEntries(allData);\n    setFileId(id);\n  };\n  const handleInputChange = async (entryId, value, index) => {\n    const newEntries = [...entries];\n    const entry = newEntries.find(e => e.id === entryId);\n    entry.count = value === \"\" ? null : parseInt(value, 10);\n    entry.entered_by = currentUser;\n    setEntries(newEntries);\n    const {\n      error\n    } = await supabase.from(\"entries\").update({\n      count: entry.count,\n      entered_by: currentUser\n    }).eq(\"id\", entryId);\n    if (error) {\n      console.error(\"Error saving count:\", error);\n      alert(\"Failed to save count. See console for details.\");\n    }\n  };\n  const getInputClass = (count, onHand) => {\n    if (count === undefined || count === null || count === \"\") return \"border-gray-300\";\n    const diff = Math.abs(count - (onHand !== null && onHand !== void 0 ? onHand : 0));\n    if (diff === 0) return \"border-green-500\";\n    if (diff <= 10) return \"border-yellow-400\";\n    if (diff <= 20) return \"border-orange-400\";\n    return \"border-red-500\";\n  };\n  const handleGenerateMismatchReport = () => {\n    const mismatched = entries.filter(e => e.count !== undefined && e.count !== null && e.count !== e.on_hand);\n    const csvRows = [\"SKU,On Hand,Count,Difference,User\"];\n    mismatched.forEach(e => {\n      var _e$count, _e$on_hand, _e$on_hand2, _e$count2, _e$assigned_to;\n      const diff = ((_e$count = e.count) !== null && _e$count !== void 0 ? _e$count : 0) - ((_e$on_hand = e.on_hand) !== null && _e$on_hand !== void 0 ? _e$on_hand : 0);\n      csvRows.push(`${e.sku},${(_e$on_hand2 = e.on_hand) !== null && _e$on_hand2 !== void 0 ? _e$on_hand2 : \"\"},${(_e$count2 = e.count) !== null && _e$count2 !== void 0 ? _e$count2 : \"\"},${diff},${(_e$assigned_to = e.assigned_to) !== null && _e$assigned_to !== void 0 ? _e$assigned_to : \"\"}`);\n    });\n    const blob = new Blob([csvRows.join(\"\\n\")], {\n      type: \"text/csv\"\n    });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement(\"a\");\n    a.href = url;\n    a.download = `Mismatch_Report_${Date.now()}.csv`;\n    a.click();\n    URL.revokeObjectURL(url);\n  };\n  const handleDownloadMissingCounts = () => {\n    const missing = entries.filter(e => e.count === null || e.count === undefined);\n    generateMissingCountsPDF(missing);\n  };\n  const focusNextEditableInput = startIndex => {\n    for (let i = startIndex + 1; i < entries.length; i++) {\n      var _entries$i;\n      if (((_entries$i = entries[i]) === null || _entries$i === void 0 ? void 0 : _entries$i.assigned_to) === currentUser) {\n        const next = inputRefs.current[i];\n        if (next) {\n          next.focus();\n          break;\n        }\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-6 w-full space-y-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-between\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-gray-700 text-sm\",\n        children: [\"Logged in as: \", currentUser, \" (\", userRole, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => supabase.auth.signOut(),\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 7\n    }, this), isAdmin && /*#__PURE__*/_jsxDEV(UploadScreen, {\n      users: userList.map(u => ({\n        id: u,\n        name: u\n      })),\n      onSubmit: handleUploadSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-md mx-auto w-full\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"block mb-1 font-semibold text-gray-800\",\n        children: \"Select Report:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"border rounded p-2 w-full\",\n        onChange: e => loadEntries(e.target.value),\n        defaultValue: \"\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          disabled: true,\n          children: \"-- Select a Report --\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 11\n        }, this), reportList.map(r => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: r.id,\n          children: new Date(r.created_at).toLocaleString()\n        }, r.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 7\n    }, this), entries.length > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"overflow-x-auto w-full max-w-full\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"w-full table-auto border border-gray-300 text-sm text-center whitespace-nowrap\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            className: \"bg-gray-100\",\n            children: isAdmin ? /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"border px-4 py-2\",\n                children: \"SKU\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 315,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"border px-4 py-2\",\n                children: \"On Hand\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 316,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"border px-4 py-2\",\n                children: \"Count\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 317,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"border px-4 py-2\",\n                children: \"Description\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 318,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"border px-4 py-2\",\n                children: \"User\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 319,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 314,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"border px-4 py-2\",\n                children: \"SKU\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 323,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"border px-4 py-2\",\n                children: \"Count\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 324,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 322,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: entries.map((entry, index) => {\n              var _entry$on_hand, _entry$count, _entry$description, _entry$count2, _entry$count3;\n              return isAdmin ? /*#__PURE__*/_jsxDEV(\"tr\", {\n                className: \"hover:bg-gray-50\",\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"border px-4 py-2 font-semibold text-left\",\n                  children: entry.sku\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 333,\n                  columnNumber: 9\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"border px-4 py-2 text-right\",\n                  children: (_entry$on_hand = entry.on_hand) !== null && _entry$on_hand !== void 0 ? _entry$on_hand : \"\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 334,\n                  columnNumber: 9\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"border px-4 py-2\",\n                  children: /*#__PURE__*/_jsxDEV(Input, {\n                    ref: el => inputRefs.current[index] = el,\n                    type: \"number\",\n                    value: (_entry$count = entry.count) !== null && _entry$count !== void 0 ? _entry$count : \"\",\n                    onChange: e => handleInputChange(entry.id, e.target.value, index),\n                    onKeyDown: e => {\n                      if (e.key === \"Enter\") {\n                        e.preventDefault();\n                        focusNextEditableInput(index);\n                      }\n                    },\n                    className: `${getInputClass(entry.count, entry.on_hand)} w-full text-center`\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 336,\n                    columnNumber: 11\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 335,\n                  columnNumber: 9\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"border px-4 py-2 text-left\",\n                  children: (_entry$description = entry.description) !== null && _entry$description !== void 0 ? _entry$description : \"\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 350,\n                  columnNumber: 9\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"border px-4 py-2 text-center\",\n                  children: entry.assigned_to ? entry.assigned_to : \"â€”\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 351,\n                  columnNumber: 9\n                }, this)]\n              }, entry.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 332,\n                columnNumber: 7\n              }, this) : /*#__PURE__*/_jsxDEV(\"tr\", {\n                className: \"hover:bg-gray-50\",\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"border px-4 py-2 font-semibold text-left\",\n                  children: entry.sku\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 357,\n                  columnNumber: 9\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"border px-4 py-2\",\n                  children: entry.assigned_to === currentUser ? /*#__PURE__*/_jsxDEV(Input, {\n                    ref: el => inputRefs.current[index] = el,\n                    type: \"number\",\n                    value: (_entry$count2 = entry.count) !== null && _entry$count2 !== void 0 ? _entry$count2 : \"\",\n                    onChange: e => handleInputChange(entry.id, e.target.value, index),\n                    onKeyDown: e => {\n                      if (e.key === \"Enter\") {\n                        e.preventDefault();\n                        focusNextEditableInput(index);\n                      }\n                    },\n                    className: `${getInputClass(entry.count, entry.on_hand)} w-full text-center`\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 360,\n                    columnNumber: 13\n                  }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"block text-gray-600\",\n                    children: (_entry$count3 = entry.count) !== null && _entry$count3 !== void 0 ? _entry$count3 : \"NA\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 374,\n                    columnNumber: 13\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 358,\n                  columnNumber: 9\n                }, this)]\n              }, entry.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 356,\n                columnNumber: 7\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex gap-2 mt-4\",\n        children: [!isAdmin && /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleDownloadMissingCounts,\n          children: \"Counts Needed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 387,\n          columnNumber: 15\n        }, this), isAdmin && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleDownloadMissingCounts,\n            children: \"Counts Needed\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 391,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleGenerateMismatchReport,\n            children: \"Mismatch Report\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 392,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-gray-500\",\n      children: \"No report selected or no entries available yet.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 398,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 272,\n    columnNumber: 5\n  }, this);\n}\n_s(InventoryApp, \"SphivCLcW0aHHChdnlGhzyaK8SA=\");\n_c4 = InventoryApp;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"Input$React.forwardRef\");\n$RefreshReg$(_c2, \"Input\");\n$RefreshReg$(_c3, \"Button\");\n$RefreshReg$(_c4, \"InventoryApp\");","map":{"version":3,"names":["React","useState","useEffect","useRef","XLSX","supabase","UploadScreen","generateMissingCountsPDF","jsxDEV","_jsxDEV","Fragment","_Fragment","Input","forwardRef","_c","props","ref","className","fileName","_jsxFileName","lineNumber","columnNumber","_c2","Button","_c3","InventoryApp","session","_s","username","role","userRole","currentUser","entries","setEntries","fileId","setFileId","reportList","setReportList","userList","setUserList","selectedUsers","setSelectedUsers","inputRefs","isAdmin","toLowerCase","includes","console","log","loadReportList","loadUserList","data","error","from","select","order","ascending","map","u","handleUploadSubmit","file","activeUsers","alert","length","reader","FileReader","onload","evt","u8","Uint8Array","target","result","workbook","read","type","sheetName","SheetNames","worksheet","Sheets","data2d","utils","sheet_to_json","header","slice","filter","row","idx","colB","undefined","String","trim","rows","fileInsert","fileErr","insert","uploaded_by","single","message","newFileId","id","chunkSize","Math","ceil","assignedEntries","index","_row$","userIndex","floor","file_id","upload_index","sku","on_hand","parseInt","description","assigned_to","insertErr","loadEntries","readAsArrayBuffer","allData","to","keepGoing","query","count","range","eq","push","e","handleInputChange","entryId","value","newEntries","entry","find","entered_by","update","getInputClass","onHand","diff","abs","handleGenerateMismatchReport","mismatched","csvRows","forEach","_e$count","_e$on_hand","_e$on_hand2","_e$count2","_e$assigned_to","blob","Blob","join","url","URL","createObjectURL","a","document","createElement","href","download","Date","now","click","revokeObjectURL","handleDownloadMissingCounts","missing","focusNextEditableInput","startIndex","i","_entries$i","next","current","focus","children","onClick","auth","signOut","users","name","onSubmit","onChange","defaultValue","disabled","r","created_at","toLocaleString","_entry$on_hand","_entry$count","_entry$description","_entry$count2","_entry$count3","el","onKeyDown","key","preventDefault","_c4","$RefreshReg$"],"sources":["/Users/louiemonteverde/Desktop/inventory-report-final-v3/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport * as XLSX from \"xlsx\";\nimport { supabase } from \"./supabase\";\nimport UploadScreen from \"./UploadScreen\";\nimport { generateMissingCountsPDF } from \"./pdfUtils\";\n\nconst Input = React.forwardRef((props, ref) => (\n  <input\n    {...props}\n    ref={ref}\n    className={`px-2 py-1 rounded border ${props.className || \"border-gray-300\"}`}\n  />\n));\n\nconst Button = (props) => (\n  <button\n    {...props}\n    className=\"bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700\"\n  />\n);\n\nexport default function InventoryApp({ session }) {\n  const { username, role } = session;\n  const [userRole] = useState(role);\n  const [currentUser] = useState(username);\n  const [entries, setEntries] = useState([]);\n  const [fileId, setFileId] = useState(null);\n  const [reportList, setReportList] = useState([]);\n  const [userList, setUserList] = useState([]);\n  const [selectedUsers, setSelectedUsers] = useState([]);\n  const inputRefs = useRef([]);\n\n  const isAdmin = (userRole || \"\").toLowerCase().includes(\"admin\");\n\n  // Debug role once per mount\n  useEffect(() => {\n    console.log(\"Session role:\", role);\n    console.log(\"App state userRole:\", userRole);\n  }, [role, userRole]);\n\n  useEffect(() => {\n    loadReportList();\n    loadUserList();\n  }, []);\n\n  const loadReportList = async () => {\n    const { data, error } = await supabase\n      .from(\"files\")\n      .select(\"id, created_at\")\n      .order(\"created_at\", { ascending: false });\n    if (!error) setReportList(data || []);\n  };\n\n  const loadUserList = async () => {\n    const { data, error } = await supabase.from(\"users\").select(\"username\");\n    if (!error) setUserList((data || []).map((u) => u.username));\n  };\n\n  // Upload + clean + assign evenly (preserving original order)\n  const handleUploadSubmit = async (file, activeUsers) => {\n    if (!file) {\n      alert(\"Please select a file.\");\n      return;\n    }\n    if (!activeUsers || activeUsers.length === 0) {\n      alert(\"Please select at least one user.\");\n      return;\n    }\n    setSelectedUsers(activeUsers);\n\n    const reader = new FileReader();\n    reader.onload = async (evt) => {\n      const u8 = new Uint8Array(evt.target.result);\n      // Universal loader: CSV/XLS/XLSX/XML\n      const workbook = XLSX.read(u8, { type: \"array\" });\n      const sheetName = workbook.SheetNames[0];\n      const worksheet = workbook.Sheets[sheetName];\n\n      // Read as a 2D array\n      let data2d = XLSX.utils.sheet_to_json(worksheet, { header: 1 });\n\n      // --- CLEANING ---\n      // 1) Delete rows 1â€“5\n      data2d = data2d.slice(5);\n\n      if (data2d.length === 0) {\n        alert(\"No rows found after cleaning.\");\n        return;\n      }\n\n      // 2) Set USER header at E1 (index 4)\n      if (!data2d[0]) data2d[0] = [];\n      data2d[0][4] = \"USER\";\n\n      // 3) Remove entire rows with blank Column B (index 1), but keep header\n      data2d = data2d.filter((row, idx) => {\n        if (idx === 0) return true; // keep header\n        const colB = row?.[1];\n        return colB !== undefined && colB !== null && String(colB).trim() !== \"\";\n      });\n\n      // Data rows (skip header row)\n      const rows = data2d.slice(1);\n\n      if (rows.length === 0) {\n        alert(\"No valid data rows after cleaning.\");\n        return;\n      }\n\n      // Create a new file record\n      const { data: fileInsert, error: fileErr } = await supabase\n        .from(\"files\")\n        .insert([{ uploaded_by: currentUser }])\n        .select()\n        .single();\n\n      if (fileErr || !fileInsert) {\n        alert(\"File upload error: \" + (fileErr?.message || \"unknown error\"));\n        return;\n      }\n\n      const newFileId = fileInsert.id;\n      setFileId(newFileId);\n\n      // Split evenly by contiguous blocks, preserving order\n      const chunkSize = Math.ceil(rows.length / activeUsers.length);\n      const assignedEntries = rows.map((row, index) => {\n        const userIndex = Math.floor(index / chunkSize);\n        return {\n          file_id: newFileId,\n          upload_index: index,\n          sku: row?.[0] ?? \"\",                 // Column A  (SKU)\n          on_hand: row?.[1] != null ? parseInt(row[1], 10) : null, // Column B (On Hand)\n          description: row?.[3] ? String(row[3]) : \"\", // Column D\n          assigned_to: activeUsers[userIndex] || activeUsers[activeUsers.length - 1],\n        };\n      });\n\n      const { error: insertErr } = await supabase\n        .from(\"entries\")\n        .insert(assignedEntries);\n      if (insertErr) {\n        alert(\"Upload failed: \" + insertErr.message);\n        return;\n      }\n\n      loadEntries(newFileId);\n    };\n\n    // Universal read mode for all Excel flavors\n    reader.readAsArrayBuffer(file);\n  };\n\n  const loadEntries = async (id) => {\n    const allData = [];\n    const chunkSize = 1000;\n    let from = 0;\n    let to = chunkSize - 1;\n    let keepGoing = true;\n\n    while (keepGoing) {\n      let query = supabase\n        .from(\"entries\")\n        .select(\n          \"id, file_id, upload_index, sku, on_hand, description, count, assigned_to\",\n          { count: \"exact\" }\n        )\n        .order(\"upload_index\", { ascending: true })\n        .range(from, to);\n\n      if (isAdmin) {\n        query = query.eq(\"file_id\", id);\n      } else {\n        query = query.eq(\"file_id\", id).eq(\"assigned_to\", currentUser);\n      }\n\n      const { data, error } = await query;\n\n      console.log(\"Sample entries returned:\", data?.slice(0, 5));\n\n\n      if (error) {\n        console.error(\"Error loading entries:\", error);\n        break;\n      }\n\n      if (data && data.length > 0) {\n        allData.push(...data);\n      }\n\n      if (!data || data.length < chunkSize) {\n        keepGoing = false;\n      } else {\n        from += chunkSize;\n        to += chunkSize;\n      }\n    }\n\n    // small debug sample so console stays readable\n    console.log(\n      \"Loaded sample entries:\",\n      allData.slice(0, 10).map((e) => ({ sku: e.sku, assigned_to: e.assigned_to }))\n    );\n\n    setEntries(allData);\n    setFileId(id);\n  };\n\n  const handleInputChange = async (entryId, value, index) => {\n    const newEntries = [...entries];\n    const entry = newEntries.find((e) => e.id === entryId);\n    entry.count = value === \"\" ? null : parseInt(value, 10);\n    entry.entered_by = currentUser;\n    setEntries(newEntries);\n\n    const { error } = await supabase\n      .from(\"entries\")\n      .update({ count: entry.count, entered_by: currentUser })\n      .eq(\"id\", entryId);\n\n    if (error) {\n      console.error(\"Error saving count:\", error);\n      alert(\"Failed to save count. See console for details.\");\n    }\n  };\n\n  const getInputClass = (count, onHand) => {\n    if (count === undefined || count === null || count === \"\") return \"border-gray-300\";\n    const diff = Math.abs(count - (onHand ?? 0));\n    if (diff === 0) return \"border-green-500\";\n    if (diff <= 10) return \"border-yellow-400\";\n    if (diff <= 20) return \"border-orange-400\";\n    return \"border-red-500\";\n  };\n\n  const handleGenerateMismatchReport = () => {\n    const mismatched = entries.filter(\n      (e) => e.count !== undefined && e.count !== null && e.count !== e.on_hand\n    );\n    const csvRows = [\"SKU,On Hand,Count,Difference,User\"];\n    mismatched.forEach((e) => {\n      const diff = (e.count ?? 0) - (e.on_hand ?? 0);\n      csvRows.push(`${e.sku},${e.on_hand ?? \"\"},${e.count ?? \"\"},${diff},${e.assigned_to ?? \"\"}`);\n    });\n    const blob = new Blob([csvRows.join(\"\\n\")], { type: \"text/csv\" });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement(\"a\");\n    a.href = url;\n    a.download = `Mismatch_Report_${Date.now()}.csv`;\n    a.click();\n    URL.revokeObjectURL(url);\n  };\n\n  const handleDownloadMissingCounts = () => {\n    const missing = entries.filter((e) => e.count === null || e.count === undefined);\n    generateMissingCountsPDF(missing);\n  };\n\n  const focusNextEditableInput = (startIndex) => {\n    for (let i = startIndex + 1; i < entries.length; i++) {\n      if (entries[i]?.assigned_to === currentUser) {\n        const next = inputRefs.current[i];\n        if (next) {\n          next.focus();\n          break;\n        }\n      }\n    }\n  };\n\n  return (\n    <div className=\"p-6 w-full space-y-4\">\n      <div className=\"flex justify-between\">\n        <div className=\"text-gray-700 text-sm\">\n          Logged in as: {currentUser} ({userRole})\n        </div>\n        <Button onClick={() => supabase.auth.signOut()}>Logout</Button>\n      </div>\n\n      {isAdmin && (\n        <UploadScreen\n          users={userList.map((u) => ({ id: u, name: u }))}\n          onSubmit={handleUploadSubmit}\n        />\n      )}\n\n      <div className=\"max-w-md mx-auto w-full\">\n        <label className=\"block mb-1 font-semibold text-gray-800\">\n          Select Report:\n        </label>\n        <select\n          className=\"border rounded p-2 w-full\"\n          onChange={(e) => loadEntries(e.target.value)}\n          defaultValue=\"\"\n        >\n          <option value=\"\" disabled>\n            -- Select a Report --\n          </option>\n          {reportList.map((r) => (\n            <option key={r.id} value={r.id}>\n              {new Date(r.created_at).toLocaleString()}\n            </option>\n          ))}\n        </select>\n      </div>\n\n      {entries.length > 0 ? (\n        <>\n          {/* Admin: 5 fixed columns. User: 2 fixed columns. */}\n          <div className=\"overflow-x-auto w-full max-w-full\">\n            <table className=\"w-full table-auto border border-gray-300 text-sm text-center whitespace-nowrap\">\n              <thead className=\"bg-gray-100\">\n                {isAdmin ? (\n                  <tr>\n                    <th className=\"border px-4 py-2\">SKU</th>\n                    <th className=\"border px-4 py-2\">On Hand</th>\n                    <th className=\"border px-4 py-2\">Count</th>\n                    <th className=\"border px-4 py-2\">Description</th>\n                    <th className=\"border px-4 py-2\">User</th>\n                  </tr>\n                ) : (\n                  <tr>\n                    <th className=\"border px-4 py-2\">SKU</th>\n                    <th className=\"border px-4 py-2\">Count</th>\n                  </tr>\n                )}\n              </thead>\n\n              <tbody>\n  {entries.map((entry, index) =>\n    isAdmin ? (\n      <tr key={entry.id} className=\"hover:bg-gray-50\">\n        <td className=\"border px-4 py-2 font-semibold text-left\">{entry.sku}</td>\n        <td className=\"border px-4 py-2 text-right\">{entry.on_hand ?? \"\"}</td>\n        <td className=\"border px-4 py-2\">\n          <Input\n            ref={(el) => (inputRefs.current[index] = el)}\n            type=\"number\"\n            value={entry.count ?? \"\"}\n            onChange={(e) => handleInputChange(entry.id, e.target.value, index)}\n            onKeyDown={(e) => {\n              if (e.key === \"Enter\") {\n                e.preventDefault();\n                focusNextEditableInput(index);\n              }\n            }}\n            className={`${getInputClass(entry.count, entry.on_hand)} w-full text-center`}\n          />\n        </td>\n        <td className=\"border px-4 py-2 text-left\">{entry.description ?? \"\"}</td>\n        <td className=\"border px-4 py-2 text-center\">\n          {entry.assigned_to ? entry.assigned_to : \"â€”\"}\n        </td>\n      </tr>\n    ) : (\n      <tr key={entry.id} className=\"hover:bg-gray-50\">\n        <td className=\"border px-4 py-2 font-semibold text-left\">{entry.sku}</td>\n        <td className=\"border px-4 py-2\">\n          {entry.assigned_to === currentUser ? (\n            <Input\n              ref={(el) => (inputRefs.current[index] = el)}\n              type=\"number\"\n              value={entry.count ?? \"\"}\n              onChange={(e) => handleInputChange(entry.id, e.target.value, index)}\n              onKeyDown={(e) => {\n                if (e.key === \"Enter\") {\n                  e.preventDefault();\n                  focusNextEditableInput(index);\n                }\n              }}\n              className={`${getInputClass(entry.count, entry.on_hand)} w-full text-center`}\n            />\n          ) : (\n            <span className=\"block text-gray-600\">{entry.count ?? \"NA\"}</span>\n          )}\n        </td>\n      </tr>\n    )\n  )}\n</tbody>\n\n            </table>\n          </div>\n\n          <div className=\"flex gap-2 mt-4\">\n            {!isAdmin && (\n              <Button onClick={handleDownloadMissingCounts}>Counts Needed</Button>\n            )}\n            {isAdmin && (\n              <>\n                <Button onClick={handleDownloadMissingCounts}>Counts Needed</Button>\n                <Button onClick={handleGenerateMismatchReport}>Mismatch Report</Button>\n              </>\n            )}\n          </div>\n        </>\n      ) : (\n        <p className=\"text-gray-500\">No report selected or no entries available yet.</p>\n      )}\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}