{"ast":null,"code":"var _jsxFileName = \"/Users/louiemonteverde/Documents/inventory-report-final-v2/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport * as XLSX from \"xlsx\";\nimport jsPDF from \"jspdf\";\nimport \"jspdf-autotable\";\nimport { supabase } from \"./supabase\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Input = /*#__PURE__*/React.forwardRef(_c = (props, ref) => /*#__PURE__*/_jsxDEV(\"input\", {\n  ...props,\n  ref: ref,\n  className: `px-2 py-1 rounded border ${props.className || \"border-gray-300\"}`\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 8,\n  columnNumber: 3\n}, this));\n_c2 = Input;\nconst Button = props => /*#__PURE__*/_jsxDEV(\"button\", {\n  ...props,\n  className: \"bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700\"\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 16,\n  columnNumber: 3\n}, this);\n_c3 = Button;\nexport default function InventoryApp({\n  session\n}) {\n  _s();\n  const {\n    username,\n    role\n  } = session;\n  const [userRole] = useState(role);\n  const [currentUser] = useState(username);\n  const [entries, setEntries] = useState([]);\n  const [fileId, setFileId] = useState(null);\n  const [reportList, setReportList] = useState([]);\n  const [userList, setUserList] = useState([]);\n  const [selectedUsers, setSelectedUsers] = useState([]);\n  const inputRefs = useRef([]);\n  useEffect(() => {\n    loadReportList();\n    loadUserList();\n  }, []);\n  const loadReportList = async () => {\n    const {\n      data,\n      error\n    } = await supabase.from(\"files\").select(\"id, created_at\").order(\"created_at\", {\n      ascending: false\n    });\n    if (!error) {\n      setReportList(data);\n    }\n  };\n  const loadUserList = async () => {\n    const {\n      data,\n      error\n    } = await supabase.from(\"users\").select(\"username\");\n    if (!error) {\n      setUserList(data.map(u => u.username));\n    }\n  };\n  const handleUpload = async e => {\n    const file = e.target.files[0];\n    if (!file || selectedUsers.length === 0) return;\n    const reader = new FileReader();\n    reader.onload = async evt => {\n      const data = evt.target.result;\n      const workbook = XLSX.read(data, {\n        type: \"binary\"\n      });\n      const sheetName = workbook.SheetNames[0];\n      const worksheet = workbook.Sheets[sheetName];\n      const jsonData = XLSX.utils.sheet_to_json(worksheet, {\n        header: 1\n      });\n      const rows = jsonData.slice(1);\n      const {\n        data: fileInsert,\n        error: fileErr\n      } = await supabase.from(\"files\").insert([{\n        uploaded_by: currentUser\n      }]).select().single();\n      if (fileErr || !fileInsert) {\n        console.error(\"File upload error:\", fileErr);\n        return;\n      }\n      const file_id = fileInsert.id;\n      setFileId(file_id);\n      const chunkSize = Math.ceil(rows.length / selectedUsers.length);\n      const assignedEntries = rows.map((row, index) => {\n        const userIndex = Math.floor(index / chunkSize);\n        return {\n          file_id,\n          sku: row[0],\n          on_hand: parseInt(row[1]),\n          description: row[3] || \"\",\n          assigned_to: selectedUsers[userIndex] || selectedUsers[selectedUsers.length - 1]\n        };\n      });\n      const {\n        error: insertErr\n      } = await supabase.from(\"entries\").insert(assignedEntries);\n      if (insertErr) {\n        console.error(\"Entries insert error:\", insertErr);\n        return;\n      }\n      loadEntries(file_id);\n    };\n    reader.readAsBinaryString(file);\n  };\n  const loadEntries = async id => {\n    const filter = userRole === \"admin\" ? {\n      file_id: id\n    } : {\n      file_id: id,\n      assigned_to: currentUser\n    };\n    const query = supabase.from(\"entries\").select(\"*\", {\n      count: \"exact\"\n    }).order(\"id\", {\n      ascending: true\n    }).range(0, 1999);\n    const {\n      data,\n      error\n    } = await query.eq(\"file_id\", id).maybeSingle(); // prevents silent failure if Supabase expects just 1 result\n\n    if (error) {\n      console.error(\"Error loading entries:\", error);\n      return;\n    }\n    setEntries(data);\n    setFileId(id);\n  };\n  const handleInputChange = async (entryId, value, index) => {\n    const newEntries = [...entries];\n    const entry = newEntries.find(e => e.id === entryId);\n    entry.count = value === \"\" ? null : parseInt(value);\n    entry.entered_by = currentUser;\n    setEntries(newEntries);\n    await supabase.from(\"entries\").update({\n      count: entry.count,\n      entered_by: currentUser\n    }).eq(\"id\", entryId);\n  };\n  const getInputClass = (count, onHand) => {\n    if (count === undefined || count === null || count === \"\") return \"border-gray-300\";\n    const diff = Math.abs(count - onHand);\n    if (diff === 0) return \"border-green-500\";\n    if (diff <= 10) return \"border-yellow-400\";\n    if (diff <= 20) return \"border-orange-400\";\n    return \"border-red-500\";\n  };\n  const handleGenerateMismatchReport = () => {\n    const mismatched = entries.filter(e => e.count !== undefined && e.count !== null && e.count !== e.on_hand);\n    const csvRows = [\"SKU,On Hand,Count,Difference,User\"];\n    mismatched.forEach(e => {\n      const diff = e.count - e.on_hand;\n      csvRows.push(`${e.sku},${e.on_hand},${e.count},${diff},${e.assigned_to}`);\n    });\n    const blob = new Blob([csvRows.join(\"\\n\")], {\n      type: \"text/csv\"\n    });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement(\"a\");\n    a.href = url;\n    a.download = `Mismatch_Report_${Date.now()}.csv`;\n    a.click();\n    URL.revokeObjectURL(url);\n  };\n  const handleDownloadMissingCounts = () => {\n    const doc = new jsPDF();\n    const missing = entries.filter(e => e.count === null || e.count === undefined);\n    const rows = missing.map((e, i) => [e.sku, \"__________\"]);\n    doc.setFontSize(14);\n    doc.text(\"Items Missing Physical Count\", 14, 16);\n    doc.autoTable({\n      head: [[\"SKU\", \"Count\"]],\n      body: rows,\n      startY: 20,\n      theme: \"grid\",\n      styles: {\n        fontSize: 10,\n        halign: \"left\",\n        valign: \"middle\",\n        cellPadding: 4\n      },\n      columnStyles: {\n        0: {\n          cellWidth: 90\n        },\n        1: {\n          cellWidth: 90\n        }\n      },\n      tableWidth: \"auto\"\n    });\n    doc.save(`Missing_Counts_${Date.now()}.pdf`);\n  };\n  const handlePrintMyRows = () => {\n    const myEntries = entries.filter(e => e.assigned_to === currentUser);\n    const printWindow = window.open(\"\", \"_blank\", \"width=800,height=600\");\n    const content = `\n      <html>\n        <head><title>My Assigned Rows</title></head>\n        <body>\n          <h2>Assigned SKUs for ${currentUser}</h2>\n          <table border=\"1\" cellspacing=\"0\" cellpadding=\"6\">\n            <thead><tr><th>SKU</th><th>Physical Count</th></tr></thead>\n            <tbody>\n              ${myEntries.map(e => `\n                <tr>\n                  <td>${e.sku}</td>\n                  <td>_____________</td>\n                </tr>\n              `).join(\"\")}\n            </tbody>\n          </table>\n          <script>window.onload = function() { window.print(); }</script>\n        </body>\n      </html>\n    `;\n    printWindow.document.write(content);\n    printWindow.document.close();\n  };\n  const focusNextEditableInput = startIndex => {\n    for (let i = startIndex + 1; i < entries.length; i++) {\n      var _entries$i;\n      if (((_entries$i = entries[i]) === null || _entries$i === void 0 ? void 0 : _entries$i.assigned_to) === currentUser) {\n        const next = inputRefs.current[i];\n        if (next) {\n          next.focus();\n          break;\n        }\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-6 w-full space-y-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-between\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-gray-700 text-sm\",\n        children: [\"Logged in as: \", currentUser, \" (\", userRole, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => supabase.auth.signOut(),\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 7\n    }, this), userRole === \"admin\" && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-xl font-semibold mb-2\",\n        children: \"Upload Inventory File\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: handleUpload,\n        className: \"mb-2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block mb-1\",\n          children: \"Select Active Users:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          multiple: true,\n          value: selectedUsers,\n          onChange: e => setSelectedUsers(Array.from(e.target.selectedOptions, opt => opt.value)),\n          className: \"border rounded p-2 w-full\",\n          children: userList.map(u => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: u,\n            children: u\n          }, u, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"block mb-1 font-semibold\",\n        children: \"Select Report:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"border rounded p-2\",\n        onChange: e => loadEntries(e.target.value),\n        defaultValue: \"\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          disabled: true,\n          children: \"-- Select a Report --\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 11\n        }, this), reportList.map(r => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: r.id,\n          children: new Date(r.created_at).toLocaleString()\n        }, r.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 7\n    }, this), entries.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"overflow-x-auto\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"min-w-full border mt-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"border px-2 py-1\",\n              children: \"SKU\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 17\n            }, this), userRole === \"admin\" && /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"border px-2 py-1\",\n              children: \"On Hand\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 42\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"border px-2 py-1\",\n              children: \"Count\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: entries.map((entry, index) => {\n            var _entry$count, _entry$count2;\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"border px-2 py-1 font-semibold\",\n                children: entry.sku\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 287,\n                columnNumber: 19\n              }, this), userRole === \"admin\" && /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"border px-2 py-1\",\n                children: entry.on_hand\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 288,\n                columnNumber: 44\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"border px-2 py-1\",\n                children: entry.assigned_to === currentUser || userRole === \"admin\" ? /*#__PURE__*/_jsxDEV(Input, {\n                  ref: el => inputRefs.current[index] = el,\n                  type: \"number\",\n                  value: (_entry$count = entry.count) !== null && _entry$count !== void 0 ? _entry$count : \"\",\n                  onChange: e => handleInputChange(entry.id, e.target.value, index),\n                  onKeyDown: e => {\n                    if (e.key === \"Enter\") {\n                      e.preventDefault();\n                      focusNextEditableInput(index);\n                    }\n                  },\n                  className: getInputClass(entry.count, entry.on_hand)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 291,\n                  columnNumber: 23\n                }, this) : (_entry$count2 = entry.count) !== null && _entry$count2 !== void 0 ? _entry$count2 : \"NA\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 289,\n                columnNumber: 19\n              }, this)]\n            }, entry.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 286,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-gray-500\",\n      children: \"No report selected or no entries available yet.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 226,\n    columnNumber: 5\n  }, this);\n}\n_s(InventoryApp, \"0GBZkDTV3vXXH3uexksJqAkiRZg=\");\n_c4 = InventoryApp;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"Input$React.forwardRef\");\n$RefreshReg$(_c2, \"Input\");\n$RefreshReg$(_c3, \"Button\");\n$RefreshReg$(_c4, \"InventoryApp\");","map":{"version":3,"names":["React","useState","useEffect","useRef","XLSX","jsPDF","supabase","jsxDEV","_jsxDEV","Input","forwardRef","_c","props","ref","className","fileName","_jsxFileName","lineNumber","columnNumber","_c2","Button","_c3","InventoryApp","session","_s","username","role","userRole","currentUser","entries","setEntries","fileId","setFileId","reportList","setReportList","userList","setUserList","selectedUsers","setSelectedUsers","inputRefs","loadReportList","loadUserList","data","error","from","select","order","ascending","map","u","handleUpload","e","file","target","files","length","reader","FileReader","onload","evt","result","workbook","read","type","sheetName","SheetNames","worksheet","Sheets","jsonData","utils","sheet_to_json","header","rows","slice","fileInsert","fileErr","insert","uploaded_by","single","console","file_id","id","chunkSize","Math","ceil","assignedEntries","row","index","userIndex","floor","sku","on_hand","parseInt","description","assigned_to","insertErr","loadEntries","readAsBinaryString","filter","query","count","range","eq","maybeSingle","handleInputChange","entryId","value","newEntries","entry","find","entered_by","update","getInputClass","onHand","undefined","diff","abs","handleGenerateMismatchReport","mismatched","csvRows","forEach","push","blob","Blob","join","url","URL","createObjectURL","a","document","createElement","href","download","Date","now","click","revokeObjectURL","handleDownloadMissingCounts","doc","missing","i","setFontSize","text","autoTable","head","body","startY","theme","styles","fontSize","halign","valign","cellPadding","columnStyles","cellWidth","tableWidth","save","handlePrintMyRows","myEntries","printWindow","window","open","content","write","close","focusNextEditableInput","startIndex","_entries$i","next","current","focus","children","onClick","auth","signOut","onChange","multiple","Array","selectedOptions","opt","defaultValue","disabled","r","created_at","toLocaleString","_entry$count","_entry$count2","el","onKeyDown","key","preventDefault","_c4","$RefreshReg$"],"sources":["/Users/louiemonteverde/Documents/inventory-report-final-v2/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport * as XLSX from \"xlsx\";\nimport jsPDF from \"jspdf\";\nimport \"jspdf-autotable\";\nimport { supabase } from \"./supabase\";\n\nconst Input = React.forwardRef((props, ref) => (\n  <input\n    {...props}\n    ref={ref}\n    className={`px-2 py-1 rounded border ${props.className || \"border-gray-300\"}`}\n  />\n));\n\nconst Button = (props) => (\n  <button\n    {...props}\n    className=\"bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700\"\n  />\n);\n\nexport default function InventoryApp({ session }) {\n  const { username, role } = session;\n  const [userRole] = useState(role);\n  const [currentUser] = useState(username);\n  const [entries, setEntries] = useState([]);\n  const [fileId, setFileId] = useState(null);\n  const [reportList, setReportList] = useState([]);\n  const [userList, setUserList] = useState([]);\n  const [selectedUsers, setSelectedUsers] = useState([]);\n  const inputRefs = useRef([]);\n\n  useEffect(() => {\n    loadReportList();\n    loadUserList();\n  }, []);\n\n  const loadReportList = async () => {\n    const { data, error } = await supabase\n      .from(\"files\")\n      .select(\"id, created_at\")\n      .order(\"created_at\", { ascending: false });\n    if (!error) {\n      setReportList(data);\n    }\n  };\n\n  const loadUserList = async () => {\n    const { data, error } = await supabase.from(\"users\").select(\"username\");\n    if (!error) {\n      setUserList(data.map((u) => u.username));\n    }\n  };\n\n  const handleUpload = async (e) => {\n    const file = e.target.files[0];\n    if (!file || selectedUsers.length === 0) return;\n\n    const reader = new FileReader();\n    reader.onload = async (evt) => {\n      const data = evt.target.result;\n      const workbook = XLSX.read(data, { type: \"binary\" });\n      const sheetName = workbook.SheetNames[0];\n      const worksheet = workbook.Sheets[sheetName];\n      const jsonData = XLSX.utils.sheet_to_json(worksheet, { header: 1 });\n\n      const rows = jsonData.slice(1);\n\n      const { data: fileInsert, error: fileErr } = await supabase\n        .from(\"files\")\n        .insert([{ uploaded_by: currentUser }])\n        .select()\n        .single();\n\n      if (fileErr || !fileInsert) {\n        console.error(\"File upload error:\", fileErr);\n        return;\n      }\n\n      const file_id = fileInsert.id;\n      setFileId(file_id);\n\n      const chunkSize = Math.ceil(rows.length / selectedUsers.length);\n      const assignedEntries = rows.map((row, index) => {\n        const userIndex = Math.floor(index / chunkSize);\n        return {\n          file_id,\n          sku: row[0],\n          on_hand: parseInt(row[1]),\n          description: row[3] || \"\",\n          assigned_to: selectedUsers[userIndex] || selectedUsers[selectedUsers.length - 1],\n        };\n      });\n\n      const { error: insertErr } = await supabase.from(\"entries\").insert(assignedEntries);\n      if (insertErr) {\n        console.error(\"Entries insert error:\", insertErr);\n        return;\n      }\n\n      loadEntries(file_id);\n    };\n    reader.readAsBinaryString(file);\n  };\n\n  const loadEntries = async (id) => {\n    const filter = userRole === \"admin\" ? { file_id: id } : { file_id: id, assigned_to: currentUser };\n    const query = supabase\n    .from(\"entries\")\n    .select(\"*\", { count: \"exact\" })\n    .order(\"id\", { ascending: true })\n    .range(0, 1999);\n  \n  const { data, error } = await query\n    .eq(\"file_id\", id)\n    .maybeSingle(); // prevents silent failure if Supabase expects just 1 result\n  \n    if (error) {\n      console.error(\"Error loading entries:\", error);\n      return;\n    }\n\n    setEntries(data);\n    setFileId(id);\n  };\n\n  const handleInputChange = async (entryId, value, index) => {\n    const newEntries = [...entries];\n    const entry = newEntries.find((e) => e.id === entryId);\n    entry.count = value === \"\" ? null : parseInt(value);\n    entry.entered_by = currentUser;\n    setEntries(newEntries);\n\n    await supabase\n      .from(\"entries\")\n      .update({ count: entry.count, entered_by: currentUser })\n      .eq(\"id\", entryId);\n  };\n\n  const getInputClass = (count, onHand) => {\n    if (count === undefined || count === null || count === \"\") return \"border-gray-300\";\n    const diff = Math.abs(count - onHand);\n    if (diff === 0) return \"border-green-500\";\n    if (diff <= 10) return \"border-yellow-400\";\n    if (diff <= 20) return \"border-orange-400\";\n    return \"border-red-500\";\n  };\n\n  const handleGenerateMismatchReport = () => {\n    const mismatched = entries.filter(\n      (e) => e.count !== undefined && e.count !== null && e.count !== e.on_hand\n    );\n    const csvRows = [\"SKU,On Hand,Count,Difference,User\"];\n    mismatched.forEach((e) => {\n      const diff = e.count - e.on_hand;\n      csvRows.push(`${e.sku},${e.on_hand},${e.count},${diff},${e.assigned_to}`);\n    });\n    const blob = new Blob([csvRows.join(\"\\n\")], { type: \"text/csv\" });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement(\"a\");\n    a.href = url;\n    a.download = `Mismatch_Report_${Date.now()}.csv`;\n    a.click();\n    URL.revokeObjectURL(url);\n  };\n\n  const handleDownloadMissingCounts = () => {\n    const doc = new jsPDF();\n    const missing = entries.filter((e) => e.count === null || e.count === undefined);\n    const rows = missing.map((e, i) => [e.sku, \"__________\"]);\n\n    doc.setFontSize(14);\n    doc.text(\"Items Missing Physical Count\", 14, 16);\n    doc.autoTable({\n      head: [[\"SKU\", \"Count\"]],\n      body: rows,\n      startY: 20,\n      theme: \"grid\",\n      styles: { fontSize: 10, halign: \"left\", valign: \"middle\", cellPadding: 4 },\n      columnStyles: { 0: { cellWidth: 90 }, 1: { cellWidth: 90 } },\n      tableWidth: \"auto\",\n    });\n    doc.save(`Missing_Counts_${Date.now()}.pdf`);\n  };\n\n  const handlePrintMyRows = () => {\n    const myEntries = entries.filter((e) => e.assigned_to === currentUser);\n    const printWindow = window.open(\"\", \"_blank\", \"width=800,height=600\");\n    const content = `\n      <html>\n        <head><title>My Assigned Rows</title></head>\n        <body>\n          <h2>Assigned SKUs for ${currentUser}</h2>\n          <table border=\"1\" cellspacing=\"0\" cellpadding=\"6\">\n            <thead><tr><th>SKU</th><th>Physical Count</th></tr></thead>\n            <tbody>\n              ${myEntries.map(e => `\n                <tr>\n                  <td>${e.sku}</td>\n                  <td>_____________</td>\n                </tr>\n              `).join(\"\")}\n            </tbody>\n          </table>\n          <script>window.onload = function() { window.print(); }</script>\n        </body>\n      </html>\n    `;\n    printWindow.document.write(content);\n    printWindow.document.close();\n  };\n\n  const focusNextEditableInput = (startIndex) => {\n    for (let i = startIndex + 1; i < entries.length; i++) {\n      if (entries[i]?.assigned_to === currentUser) {\n        const next = inputRefs.current[i];\n        if (next) {\n          next.focus();\n          break;\n        }\n      }\n    }\n  };\n\n  return (\n    <div className=\"p-6 w-full space-y-4\">\n      <div className=\"flex justify-between\">\n        <div className=\"text-gray-700 text-sm\">Logged in as: {currentUser} ({userRole})</div>\n        <Button onClick={() => supabase.auth.signOut()}>Logout</Button>\n      </div>\n\n      {userRole === \"admin\" && (\n        <div>\n          <h2 className=\"text-xl font-semibold mb-2\">Upload Inventory File</h2>\n          <input type=\"file\" onChange={handleUpload} className=\"mb-2\" />\n          <div className=\"mb-4\">\n            <label className=\"block mb-1\">Select Active Users:</label>\n            <select\n              multiple\n              value={selectedUsers}\n              onChange={(e) =>\n                setSelectedUsers(Array.from(e.target.selectedOptions, (opt) => opt.value))\n              }\n              className=\"border rounded p-2 w-full\"\n            >\n              {userList.map((u) => (\n                <option key={u} value={u}>\n                  {u}\n                </option>\n              ))}\n            </select>\n          </div>\n        </div>\n      )}\n\n      <div>\n        <label className=\"block mb-1 font-semibold\">Select Report:</label>\n        <select\n          className=\"border rounded p-2\"\n          onChange={(e) => loadEntries(e.target.value)}\n          defaultValue=\"\"\n        >\n          <option value=\"\" disabled>\n            -- Select a Report --\n          </option>\n          {reportList.map((r) => (\n            <option key={r.id} value={r.id}>\n              {new Date(r.created_at).toLocaleString()}\n            </option>\n          ))}\n        </select>\n      </div>\n\n      {entries.length > 0 ? (\n        <div className=\"overflow-x-auto\">\n          <table className=\"min-w-full border mt-4\">\n            <thead>\n              <tr>\n                <th className=\"border px-2 py-1\">SKU</th>\n                {userRole === \"admin\" && <th className=\"border px-2 py-1\">On Hand</th>}\n                <th className=\"border px-2 py-1\">Count</th>\n              </tr>\n            </thead>\n            <tbody>\n              {entries.map((entry, index) => (\n                <tr key={entry.id}>\n                  <td className=\"border px-2 py-1 font-semibold\">{entry.sku}</td>\n                  {userRole === \"admin\" && <td className=\"border px-2 py-1\">{entry.on_hand}</td>}\n                  <td className=\"border px-2 py-1\">\n                    {entry.assigned_to === currentUser || userRole === \"admin\" ? (\n                      <Input\n                        ref={(el) => (inputRefs.current[index] = el)}\n                        type=\"number\"\n                        value={entry.count ?? \"\"}\n                        onChange={(e) => handleInputChange(entry.id, e.target.value, index)}\n                        onKeyDown={(e) => {\n                          if (e.key === \"Enter\") {\n                            e.preventDefault();\n                            focusNextEditableInput(index);\n                          }\n                        }}\n                        className={getInputClass(entry.count, entry.on_hand)}\n                      />\n                    ) : (\n                      entry.count ?? \"NA\"\n                    )}\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      ) : (\n        <p className=\"text-gray-500\">No report selected or no entries available yet.</p>\n      )}\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}